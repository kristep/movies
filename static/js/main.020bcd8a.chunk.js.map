{"version":3,"sources":["features/header/Header.jsx","utils/hooks/useFetch.js","features/navigation/Genres.jsx","utils/getters/GetGenres.js","features/search/SearchLine.jsx","utils/hooks/useInput.js","components/button/Button.jsx","features/dropdown/Dropdown.jsx","utils/hooks/useOnClickOutside.js","features/navigation/Navigation.jsx","features/footer/Footer.jsx","utils/dates.js","components/movie-card/MovieCard.jsx","pages/home/NewMovies.jsx","pages/home/Home.jsx","pages/searchResults/MovieSearchResults.jsx","features/movie/image-section/ImageSection.jsx","features/movie/movie-description/MovieDescription.jsx","features/crew/CrewItem.jsx","features/crew/Crew.jsx","features/cast/CastItem.jsx","features/cast/Cast.jsx","features/movie/production-companies/ProductionCompanies.jsx","pages/details/Details.jsx","pages/details/MovieDetails.jsx","features/popular-movies/PopularMovies.jsx","pages/popular/PopularAllTimes.jsx","pages/popular/PopularByGenres.jsx","features/actor/actor-info/ActorInfo.jsx","features/actor/known-for/KnownFor.jsx","pages/actor/Actor.jsx","pages/actor/ActorDetails.jsx","App.js","index.js"],"names":["Header","className","to","useFetch","url","query","useState","response","setResponse","isError","setIsError","isLoading","setIsLoading","useEffect","a","fetch","res","json","fetchData","Genres","genres","GetGenres","map","genre","key","id","name","SearchLine","initialValue","value","setValue","reset","bind","onChange","event","target","useInput","history","useHistory","onSubmit","preventDefault","push","role","htmlFor","type","placeholder","Button","onClick","text","Dropdown","ref","handler","children","open","setOpen","dropdownRef","useRef","onKeyDown","e","document","addEventListener","removeEventListener","listener","current","contains","Navigation","Footer","Date","getFullYear","body","scrollTop","documentElement","getTodayDate","toISOString","split","MovieCard","props","movie","title","vote_average","vote_count","poster_path","release_date","src","alt","NewMovies","page","setPage","collapsed","setCollapsed","pageCount","total_pages","results","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","subContainerClassName","activeClassName","style","display","Home","newMoviesUrl","today2","final","setDate","getDate","getWeekAgoDate","upcommingMoviesUrl","MovieSearchResults","useParams","total_results","ImageSection","runtime","original_language","backdrop_path","genresList","MovieDescription","tagline","overview","budget","revenue","homepage","formatCurrency","Intl","NumberFormat","currency","format","href","CrewItem","titleText","Crew","crew","countries","director","setDirector","writers","setWriters","sound","setSound","forEach","obj","department","prev","length","item","job","country","iso_3166_1","CastItem","actor","profile_path","character","Cast","cast","Swiper","slidesPerView","spaceBetween","navigation","nextEl","prevEl","breakpoints","1024","768","640","320","cast_id","ProductionCompanies","production_companies","company","logo_path","Details","details","production_countries","people","substring","MovieDetails","movieId","status_code","PopularMovies","PopularAllTimes","PopularByGenres","genreId","genreName","ActorInfo","biography","birthday","deathday","place_of_birth","KnownFor","actorData","knownForArr","known_for","getKnownFor","media_type","Actor","fullUrl","getID","fullActorData","undefined","ActorDetails","actorName","App","Fragment","exact","path","ReactDOM","render","basename","process","getElementById"],"mappings":"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","file":"static/js/main.020bcd8a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <Link to=\"/\">\r\n        <div className=\"header__overlay\">\r\n          <span className=\"header__title\">Movies library</span>\r\n        </div>\r\n      </Link>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState, useEffect } from 'react'\r\n\r\n\r\nexport const useFetch = (url, query) => {\r\n  const [response, setResponse] = useState(null);\r\n  const [isError, setIsError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsError(false);\r\n      setIsLoading(true);\r\n      try {\r\n        const res = await fetch(url);\r\n        const json = await res.json();\r\n        setResponse(json);\r\n      } catch (error) {\r\n        setIsError(true);\r\n      }\r\n      setIsLoading(false)\r\n    };\r\n\r\n    if (query) {\r\n      fetchData();\r\n    }\r\n  }, [url, query])\r\n\r\n  return { response, isLoading, isError };\r\n\r\n};\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { GetGenres } from \"../../utils/getters/GetGenres\";\r\n\r\nimport \"./genres.scss\";\r\n\r\nconst Genres = () => {\r\n  const genres = GetGenres();\r\n  return (\r\n    <ul className=\"genres-list\">\r\n      {genres !== \"\"\r\n        ? genres.genres.map((genre) => (\r\n            <li key={genre.id} className=\"genres-list__genre\">\r\n              <Link\r\n                to={`/popular_by_genre/${genre.id}/${genre.name}`}\r\n                className=\"genres-list__link\"\r\n              >\r\n                {genre.name}\r\n              </Link>\r\n            </li>\r\n          ))\r\n        : null}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Genres;\r\n","import { useFetch } from '../hooks/useFetch'\r\n\r\nexport const GetGenres = () => {\r\n  const data = useFetch('https://api.themoviedb.org/3/genre/movie/list?api_key=f1782698a1c04f301973e311a7876bdb&language=en-US', 'genres')\r\n\r\n  const genres = data.response;\r\n  return genres !== null ? genres : '';\r\n}\r\n\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useInput } from \"../../utils/hooks/useInput\";\r\n\r\nimport \"./searchLine.scss\";\r\n\r\nconst SearchLine = () => {\r\n  const { value, bind, reset } = useInput(\"\");\r\n  let history = useHistory();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    reset();\r\n    if (value) {\r\n      history.push(`/search_results/${value}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"search\" role=\"search\">\r\n      <label htmlFor=\"search\">\r\n        <span className=\"visually-hidden\">Search</span>\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"search by movie title\"\r\n        {...bind}\r\n        className=\"search__input\"\r\n        id=\"search\"\r\n      />\r\n      <button type=\"submit\" className=\"search__button\">\r\n        <span className=\"visually-hidden\">Submit Search</span>\r\n        <i className=\"fas fa-search\"></i>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchLine;\r\n","import { useState } from \"react\";\r\n\r\nexport const useInput = initialValue => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    reset: () => setValue(\"\"),\r\n    bind: {\r\n      value,\r\n      onChange: event => {\r\n        setValue(event.target.value);\r\n      }\r\n    }\r\n  };\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./button.scss\";\r\n\r\nconst Button = ({ onClick, text, className }) => {\r\n  return (\r\n    <button onClick={onClick} className={`button button--${className}`}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useOnClickOutside } from \"../../utils/hooks/useOnClickOutside\";\r\nimport Button from \"../../components/button/Button\";\r\n\r\nimport \"./dropdown.scss\";\r\n\r\nconst Dropdown = ({ text, children }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const onKeyDown = (e) => {\r\n      if (e.key === \"Escape\") {\r\n        setOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"keydown\", onKeyDown, false);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", onKeyDown, false);\r\n    };\r\n  }, [setOpen]);\r\n\r\n  useOnClickOutside(dropdownRef, () => setOpen(false));\r\n\r\n  return (\r\n    <div ref={dropdownRef}>\r\n      <Button\r\n        text={text}\r\n        className={\"navigation\"}\r\n        onClick={() => {\r\n          setOpen(!open);\r\n        }}\r\n      />\r\n      <div className={`dropdown ${open && \"is-active\"}`}>\r\n        <ul className=\"dropdown__content\" onClick={() => setOpen(false)}>\r\n          {children}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDropdown.propTypes = {\r\n  text: PropTypes.string,\r\n  children: PropTypes.element,\r\n};\r\n\r\nexport default Dropdown;\r\n","import { useEffect } from \"react\";\n\nexport function useOnClickOutside(ref, handler) {\n  useEffect(() => {\n    const listener = (event) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n\n    document.addEventListener(\"mousedown\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n    };\n    // eslint-disable-next-line\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n}\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Genres from \"./Genres.jsx\";\r\nimport SearchLine from \"../search/SearchLine.jsx\";\r\n\r\nimport Dropdown from \"../dropdown/Dropdown\";\r\nimport \"./navigation.scss\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav className=\"navigation\">\r\n      <ul className=\"navigation__list\">\r\n        <li className=\"navigation__list-item\">\r\n          <Dropdown text={\"Popular by Genres\"}>\r\n            <Genres />\r\n          </Dropdown>\r\n        </li>\r\n        <li className=\"navigation__list-item\">\r\n          <Link to=\"/most_popular\" className=\"navigation__link\">\r\n            The most popular\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n\r\n      <SearchLine />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport \"./footer.scss\";\r\n\r\nconst Footer = () => {\r\n  const scrollUp = () => {\r\n    document.body.scrollTop = 0;\r\n    document.documentElement.scrollTop = 0;\r\n  };\r\n\r\n  const getCurrentYear = () => {\r\n    const date = new Date();\r\n    return date.getFullYear();\r\n  };\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <span className=\"footer__copyright\">\r\n        © {getCurrentYear()} KriStep All Rights Reserved\r\n      </span>\r\n      <i className=\"fas fa-arrow-up footer__arrow-up\" onClick={scrollUp}></i>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const getTodayDate = () => new Date().toISOString().split(\"T\")[0];\r\n\r\nexport const getWeekAgoDate = () => {\r\n  const today2 = new Date();\r\n  const final = new Date(today2);\r\n  final.setDate(today2.getDate() - 7);\r\n  const weekAgoDate = final.toISOString().split(\"T\")[0];\r\n  return weekAgoDate;\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./movieCard.scss\";\r\n\r\nconst MovieCard = (props) => {\r\n  const {\r\n    title,\r\n    id,\r\n    vote_average,\r\n    vote_count,\r\n    poster_path,\r\n    release_date,\r\n  } = props.movie;\r\n  return (\r\n    <Link to={`/${id}`} className=\"movie-card\">\r\n      {poster_path ? (\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\r\n          alt=\"movie poster\"\r\n          className=\"movie-card__image\"\r\n        />\r\n      ) : (\r\n        <img className=\"movie-card__image\" alt=\"this movie has no poster\" />\r\n      )}\r\n\r\n      <div className=\"movie-card__description\">\r\n        <h3 className=\"movie-card__title\">{title}</h3>\r\n        {vote_average > 0 ? (\r\n          <p className=\"movie-card__votes\">\r\n            {vote_average} points ({vote_count} votes)\r\n          </p>\r\n        ) : (\r\n          <p className=\"movie-card__votes\">-- no votes yet --</p>\r\n        )}\r\n\r\n        <span className=\"movie-card__released\">{release_date}</span>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport { useFetch } from \"../../utils/hooks/useFetch\";\r\nimport Button from \"../../components/button/Button.jsx\";\r\n\r\nimport MovieCard from \"../../components/movie-card/MovieCard\";\r\n\r\nimport \"./newMovies.scss\";\r\nimport \"../../styles/pagination.scss\";\r\n\r\nconst NewMovies = (props) => {\r\n  const [page, setPage] = useState(1);\r\n  const [collapsed, setCollapsed] = useState(true);\r\n\r\n  const { url, text } = props;\r\n  const { response, isLoading, isError } = useFetch(`${url}${page}`, page);\r\n  const pageCount = response?.total_pages;\r\n\r\n  const handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    setPage(selectedPage + 1);\r\n  };\r\n\r\n  const showAll = (e) => {\r\n    setCollapsed(false);\r\n    e.target.style.display = \"none\";\r\n  };\r\n  return (\r\n    <>\r\n      {isError && <div>Something went wrong ...</div>}\r\n      {isLoading ? (\r\n        <div className=\"new-movies__loader\"></div>\r\n      ) : (\r\n        <>\r\n          <div className={`new-movies ${collapsed && \"new-movies--collapsed\"}`}>\r\n            <h2 className=\"new-movies__header\">{text}</h2>\r\n            <div className=\"new-movies__items\">\r\n              {response?.results.map((movie) => (\r\n                <MovieCard movie={movie} key={movie.id} />\r\n              ))}\r\n            </div>\r\n\r\n            <ReactPaginate\r\n              previousLabel={\"prev\"}\r\n              nextLabel={\"next\"}\r\n              breakLabel={\"...\"}\r\n              breakClassName={\"break\"}\r\n              pageCount={pageCount}\r\n              marginPagesDisplayed={2}\r\n              pageRangeDisplayed={3}\r\n              onPageChange={handlePageClick}\r\n              containerClassName={\"pagination\"}\r\n              subContainerClassName={\"pages pagination\"}\r\n              activeClassName={\"active\"}\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            onClick={(event) => showAll(event)}\r\n            text={\"show all\"}\r\n            className={\"show-all\"}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nNewMovies.propTypes = {\r\n  url: PropTypes.string,\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default NewMovies;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { getTodayDate, getWeekAgoDate } from \"../../utils/dates\";\r\nimport NewMovies from \"./NewMovies\";\r\n\r\nimport \"./home.scss\";\r\n\r\nconst Home = () => {\r\n  const newMoviesUrl = `https://api.themoviedb.org/3/discover/movie?api_key=f1782698a1c04f301973e311a7876bdb&primary_release_date.gte=${getWeekAgoDate()}&primary_release_date.lte=${getTodayDate()}&sort_by=release_date.desc&page=`;\r\n\r\n  const upcommingMoviesUrl = `https://api.themoviedb.org/3/movie/upcoming?api_key=f1782698a1c04f301973e311a7876bdb&primary_release_date.gte=${getTodayDate()}&page=`;\r\n\r\n  return (\r\n    <main className=\"home\">\r\n      <article>\r\n        <NewMovies url={newMoviesUrl} text={\"Just released movies:\"} />\r\n      </article>\r\n\r\n      <article className=\"home__section home__section--with-background\">\r\n        <NewMovies url={upcommingMoviesUrl} text={\"Upcomming movies:\"} />\r\n      </article>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useFetch } from \"../../utils/hooks/useFetch\";\r\n\r\nimport MovieCard from \"../../components/movie-card/MovieCard\";\r\n\r\nimport \"./movieSearchResults.scss\";\r\nimport \"../../styles/pagination.scss\";\r\n\r\nconst MovieSearchResults = () => {\r\n  const [page, setPage] = useState(1);\r\n  const { query } = useParams();\r\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=f1782698a1c04f301973e311a7876bdb&query=${query}&page=${page}`;\r\n\r\n  const { response, isLoading } = useFetch(url, query);\r\n  const results = response?.results;\r\n  const pageCount = response?.total_pages;\r\n\r\n  const handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    setPage(selectedPage + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-results\">\r\n      {isLoading && <div className=\"loader\"></div>}\r\n      <h2 className=\"search-results__title\">Search by: '{query}'</h2>\r\n      {response !== null ? (\r\n        <span className=\"search-results__subtitle\">\r\n          {response?.total_results} movies found\r\n        </span>\r\n      ) : (\r\n        \"No results found\"\r\n      )}\r\n\r\n      <div className=\"search-results__list\">\r\n        {response !== null &&\r\n          results.map((movie) => <MovieCard movie={movie} key={movie.id} />)}\r\n      </div>\r\n      <ReactPaginate\r\n        previousLabel={\"prev\"}\r\n        nextLabel={\"next\"}\r\n        breakLabel={\"...\"}\r\n        breakClassName={\"break\"}\r\n        pageCount={pageCount}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={5}\r\n        onPageChange={handlePageClick}\r\n        containerClassName={\"pagination\"}\r\n        subContainerClassName={\"pages pagination\"}\r\n        activeClassName={\"active\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieSearchResults;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./imageSection.scss\";\r\n\r\nconst ImageSection = (props) => {\r\n  const {\r\n    genres,\r\n    release_date,\r\n    runtime,\r\n    original_language,\r\n    backdrop_path,\r\n  } = props;\r\n\r\n  const genresList = genres\r\n    ? genres.map((genre) => (\r\n        <li key={genre.id} className=\"image-section__genres-item\">\r\n          {genre.name}\r\n        </li>\r\n      ))\r\n    : \"\";\r\n\r\n  return (\r\n    <div className=\"image-section\">\r\n      <div className=\"image-section__info\">\r\n        <ul className=\"image-section__genres\">{genresList}</ul>\r\n        <span>release date: {release_date}</span>\r\n        <span>\r\n          {runtime > 0 ? runtime + \"min.\" : \"\"} ({original_language})\r\n        </span>\r\n      </div>\r\n\r\n      {backdrop_path ? (\r\n        <img\r\n          className=\"image-section__image\"\r\n          src={`https://image.tmdb.org/t/p/w500${backdrop_path}`}\r\n          alt=\"backdrop\"\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nImageSection.propTypes = {\r\n  genres: PropTypes.array,\r\n  release_date: PropTypes.string,\r\n  runtime: PropTypes.number,\r\n  original_language: PropTypes.string,\r\n  backdrop_path: PropTypes.string,\r\n};\r\n\r\nexport default ImageSection;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./movieDescription.scss\";\r\n\r\nconst MovieDescription = (props) => {\r\n  const { tagline, overview, budget, revenue, homepage } = props;\r\n  const formatCurrency = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n  });\r\n\r\n  return (\r\n    <div className=\"movie-description\">\r\n      <div>\r\n        <p className=\"movie-description__tagline\">{tagline}</p>\r\n        <p className=\"movie-description__overview\">{overview}</p>\r\n      </div>\r\n      <div>\r\n        {budget > 0 && (\r\n          <div className=\"movie-description__budget\">\r\n            <p className=\"movie-description__budget-row\">\r\n              <span>Budget:</span>\r\n              <span>{formatCurrency.format(budget)}</span>\r\n            </p>\r\n            <p className=\"movie-description__budget-row\">\r\n              <span>Revenue:</span>\r\n              <span>{formatCurrency.format(revenue)}</span>\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {homepage && (\r\n          <a\r\n            className=\"movie-description__link\"\r\n            href={`${homepage}`}\r\n            alt=\"homepage\"\r\n          >\r\n            Visit movie homepage\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieDescription.propTypes = {\r\n  tagline: PropTypes.string,\r\n  overview: PropTypes.string,\r\n  budget: PropTypes.number,\r\n  revenue: PropTypes.number,\r\n  homepage: PropTypes.string,\r\n};\r\n\r\nexport default MovieDescription;\r\n","import React from \"react\";\r\nimport PropTypes, { oneOfType } from \"prop-types\";\r\n\r\nimport \"./crewItem.scss\";\r\n\r\nconst CrewItem = ({ titleText, children }) => {\r\n  return (\r\n    <li className=\"crew-item\">\r\n      <h4 className=\"crew-item__title\">{titleText}</h4> {children}\r\n    </li>\r\n  );\r\n};\r\n\r\nCrewItem.propTypes = {\r\n  titleText: PropTypes.string,\r\n  children: oneOfType([PropTypes.object, PropTypes.string]),\r\n};\r\n\r\nexport default CrewItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport CrewItem from \"./CrewItem\";\r\nimport \"./crew.scss\";\r\n\r\nconst Crew = ({ crew, countries }) => {\r\n  const [director, setDirector] = useState(\"\");\r\n  const [writers, setWriters] = useState([]);\r\n  const [sound, setSound] = useState([]);\r\n\r\n  useEffect(() => {\r\n    crew.forEach((obj) => {\r\n      if (obj.department === \"Directing\") {\r\n        setDirector(obj.name);\r\n      } else if (obj.department === \"Writing\") {\r\n        setWriters((prev) => [...prev, obj]);\r\n      } else if (obj.department === \"Sound\") {\r\n        setSound((prev) => [...prev, obj]);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ul className=\"crew-list\">\r\n      {director && <CrewItem titleText={\"Directed by:\"}>{director}</CrewItem>}\r\n\r\n      {writers.length !== 0 && (\r\n        <CrewItem titleText={\"Written by:\"}>\r\n          <ul>\r\n            {writers.map((item) => (\r\n              <li key={item.id}>\r\n                {item.name} - {item.job}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </CrewItem>\r\n      )}\r\n\r\n      {sound.length !== 0 && (\r\n        <CrewItem titleText={\"Sound:\"}>\r\n          <ul>\r\n            {sound.map((item) => (\r\n              <li key={item.id}>\r\n                {item.name} - {item.job}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </CrewItem>\r\n      )}\r\n\r\n      {countries.length !== 0 && (\r\n        <CrewItem titleText={\"Production countries:\"}>\r\n          <ul>\r\n            {countries.map((country) => (\r\n              <li key={country.iso_3166_1}>\r\n                {country.iso_3166_1} - {country.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </CrewItem>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nCrew.propTypes = {\r\n  crew: PropTypes.array,\r\n  countries: PropTypes.array,\r\n};\r\n\r\nexport default Crew;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./castItem.scss\";\r\n\r\nconst CastItem = ({ actor }) => {\r\n  return (\r\n    <li className=\"cast-item\">\r\n      <div className=\"cast-item__image-wrapper\">\r\n        <img\r\n          className=\"cast-item__image\"\r\n          src={`https://image.tmdb.org/t/p/original${actor.profile_path}`}\r\n          alt=\"actor\"\r\n        />\r\n      </div>\r\n\r\n      {actor.character && (\r\n        <span className=\"cast-item__character\">{actor.character}</span>\r\n      )}\r\n      <span className=\"cast-item__name\">{actor.name}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nCastItem.propTypes = {\r\n  actor: PropTypes.shape({\r\n    profile_path: PropTypes.string,\r\n    characterh: PropTypes.string,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default CastItem;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Swiper from \"swiper\";\r\n\r\nimport CastItem from \"./CastItem\";\r\n\r\nimport \"./cast.scss\";\r\n\r\nconst Cast = ({ cast }) => {\r\n  useEffect(() => {\r\n    new Swiper(\".swiper-container\", {\r\n      slidesPerView: 10,\r\n      spaceBetween: 50,\r\n      navigation: {\r\n        nextEl: \".swiper-button-next\",\r\n        prevEl: \".swiper-button-prev\",\r\n      },\r\n      breakpoints: {\r\n        1024: {\r\n          slidesPerView: 6,\r\n          spaceBetween: 40,\r\n        },\r\n        768: {\r\n          slidesPerView: 4,\r\n          spaceBetween: 30,\r\n        },\r\n        640: {\r\n          slidesPerView: 3,\r\n          spaceBetween: 20,\r\n        },\r\n        320: {\r\n          slidesPerView: 2,\r\n          spaceBetween: 10,\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {cast.length !== 0 && (\r\n        <>\r\n          <h2 className=\"swiper-title\">The main cast:</h2>\r\n          <div className=\"swiper-container\">\r\n            <ul className=\" swiper-wrapper \">\r\n              {cast.map((actor) => (\r\n                <Link\r\n                  className=\"swiper-slide\"\r\n                  to={`/actor/${actor.name}`}\r\n                  key={actor.cast_id}\r\n                >\r\n                  <CastItem actor={actor} />\r\n                </Link>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"swiper-button-prev\"></div>\r\n            <div className=\"swiper-button-next\"></div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nCast.propTypes = {\r\n  cast: PropTypes.array,\r\n};\r\n\r\nexport default Cast;\r\n","import React from \"react\";\r\n\r\nimport \"./productionCompanies.scss\";\r\n\r\nconst ProductionCompanies = ({ production_companies }) => {\r\n  return (\r\n    <>\r\n      <h4 className=\"companies__title\">Production companies:</h4>\r\n      {production_companies.map((company) => (\r\n        <li key={company.id} className=\"companies-item\">\r\n          {company.logo_path ? (\r\n            <img\r\n              className=\"companies__logo\"\r\n              src={`https://image.tmdb.org/t/p/w200${company.logo_path}`}\r\n              alt=\"company logo\"\r\n            />\r\n          ) : (\r\n            <div className=\"companies__instead-logo\">\r\n              <p>{company.name}</p>\r\n            </div>\r\n          )}\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductionCompanies;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useFetch } from \"../../utils/hooks/useFetch\";\r\n\r\nimport ImageSection from \"../../features/movie/image-section/ImageSection\";\r\nimport MovieDescription from \"../../features/movie/movie-description/MovieDescription\";\r\nimport Crew from \"../../features/crew/Crew.jsx\";\r\nimport Cast from \"../../features/cast/Cast.jsx\";\r\nimport ProductionCompanies from \"../../features/movie/production-companies/ProductionCompanies\";\r\n\r\nimport \"swiper/css/swiper.css\";\r\nimport \"./details.scss\";\r\n\r\nconst Details = (props) => {\r\n  const {\r\n    title,\r\n    backdrop_path,\r\n    overview,\r\n    genres,\r\n    budget,\r\n    revenue,\r\n    release_date,\r\n    runtime,\r\n    homepage,\r\n    production_companies,\r\n    original_language,\r\n    tagline,\r\n    id,\r\n    production_countries,\r\n  } = props.details;\r\n\r\n  const data = useFetch(\r\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=f1782698a1c04f301973e311a7876bdb`,\r\n    \"people\"\r\n  );\r\n\r\n  const people = data.response;\r\n  return (\r\n    <div className=\"details\">\r\n      <h2 className=\"details__title\">\r\n        {title}{\" \"}\r\n        <span className=\"details__year\">({release_date.substring(0, 4)})</span>\r\n      </h2>\r\n\r\n      <div className=\"details__image\">\r\n        <ImageSection\r\n          genres={genres}\r\n          release_date={release_date}\r\n          runtime={runtime}\r\n          original_language={original_language}\r\n          backdrop_path={backdrop_path}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"details__description\">\r\n        <MovieDescription\r\n          tagline={tagline}\r\n          overview={overview}\r\n          budget={budget}\r\n          revenue={revenue}\r\n          homepage={homepage}\r\n        />\r\n      </div>\r\n\r\n      {people !== null && (\r\n        <div className=\"details__cast\">\r\n          <Cast cast={people.cast} />\r\n        </div>\r\n      )}\r\n      {people !== null && (\r\n        <div className=\"details__crew\">\r\n          <Crew crew={people.crew} countries={production_countries} />\r\n        </div>\r\n      )}\r\n\r\n      {production_companies && (\r\n        <ul className=\"details__companies\">\r\n          <ProductionCompanies production_companies={production_companies} />\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nDetails.propTypes = {\r\n  title: PropTypes.string,\r\n  backdrop_path: PropTypes.string,\r\n  overview: PropTypes.string,\r\n  genres: PropTypes.array,\r\n  budget: PropTypes.string,\r\n  revenue: PropTypes.string,\r\n  release_date: PropTypes.string,\r\n  runtime: PropTypes.string,\r\n  homepage: PropTypes.string,\r\n  production_companies: PropTypes.array,\r\n  original_language: PropTypes.string,\r\n  tagline: PropTypes.string,\r\n  id: PropTypes.string,\r\n  production_countries: PropTypes.array,\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nexport default Details;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { useFetch } from \"../../utils/hooks/useFetch\";\r\n\r\nimport Details from \"./Details.jsx\";\r\n\r\nconst MovieDetails = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=f1782698a1c04f301973e311a7876bdb`;\r\n\r\n  const response = useFetch(url, movieId);\r\n  return (\r\n    <>\r\n      {response.response !== null && response.response.status_code !== 34 ? (\r\n        <Details details={response.response} />\r\n      ) : (\r\n        \"sorry, this movie has no details in our database\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport { useFetch } from \"../../utils/hooks/useFetch\";\r\n\r\nimport MovieCard from \"../../components/movie-card/MovieCard\";\r\n\r\nimport \"./popularMovies.scss\";\r\nimport \"../../styles/pagination.scss\";\r\n\r\nconst PopularMovies = (props) => {\r\n  const [page, setPage] = useState(1);\r\n\r\n  const { url, text } = props;\r\n  const { response, isLoading, isError } = useFetch(`${url}${page}`, page);\r\n  const pageCount = response?.total_pages;\r\n\r\n  const handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    setPage(selectedPage + 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isError && <div>Something went wrong ...</div>}\r\n      {isLoading ? (\r\n        <div className=\"popular-movies__loader\"></div>\r\n      ) : (\r\n        <>\r\n          <div className=\"popular-movies\">\r\n            <h2 className=\"popular-movies__header\">{text}</h2>\r\n            <div className=\"popular-movies__items\">\r\n              {response?.results.map((movie) => (\r\n                <MovieCard movie={movie} key={movie.id} />\r\n              ))}\r\n            </div>\r\n\r\n            <ReactPaginate\r\n              previousLabel={\"prev\"}\r\n              nextLabel={\"next\"}\r\n              breakLabel={\"...\"}\r\n              breakClassName={\"break\"}\r\n              pageCount={pageCount}\r\n              marginPagesDisplayed={2}\r\n              pageRangeDisplayed={3}\r\n              onPageChange={handlePageClick}\r\n              containerClassName={\"pagination\"}\r\n              subContainerClassName={\"pages pagination\"}\r\n              activeClassName={\"active\"}\r\n            />\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nPopularMovies.propTypes = {\r\n  url: PropTypes.string,\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default PopularMovies;\r\n","import React from \"react\";\r\n\r\nimport PopularMovies from \"../../features/popular-movies/PopularMovies\";\r\n\r\nconst PopularAllTimes = () => {\r\n  const url =\r\n    \"https://api.themoviedb.org/3/discover/movie?api_key=f1782698a1c04f301973e311a7876bdb&sort_by=vote_average.desc&vote_count.gte=50&page=\";\r\n  return (\r\n    <main className=\"popular-movies\">\r\n      <PopularMovies url={url} text={\"The most popular movies of all times:\"} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default PopularAllTimes;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport PopularMovies from \"../../features/popular-movies/PopularMovies\";\r\n\r\nconst PopularByGenres = () => {\r\n  const { genreId, genreName } = useParams();\r\n\r\n  const url = `https://api.themoviedb.org/3/discover/movie?with_genres=${genreId}&api_key=f1782698a1c04f301973e311a7876bdb&sort_by=vote_average.desc&vote_count.gte=10&page=`;\r\n\r\n  return (\r\n    <main className=\"popular-movies\">\r\n      <PopularMovies url={url} text={`The most popular ${genreName} movies:`} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default PopularByGenres;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./actorInfo.scss\";\r\n\r\nconst ActorInfo = (props) => {\r\n  const {\r\n    biography,\r\n    profile_path,\r\n    birthday,\r\n    deathday,\r\n    place_of_birth,\r\n    homepage,\r\n  } = props;\r\n  return (\r\n    <div className=\"actor-info\">\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/original/${profile_path}`}\r\n        alt=\"actor\"\r\n        className=\"actor-info__image\"\r\n      />\r\n      <div className=\"actor-info__description\">\r\n        {birthday && (\r\n          <p>\r\n            <span className=\"actor-info__description-tagline\">\r\n              Birth date:{\" \"}\r\n            </span>\r\n            <span>{birthday}</span>\r\n          </p>\r\n        )}\r\n        {deathday !== null && (\r\n          <p>\r\n            <span className=\"actor-info__description-tagline\">Death date:</span>{\" \"}\r\n            <span>{deathday}</span>\r\n          </p>\r\n        )}\r\n        {place_of_birth && (\r\n          <p>\r\n            <span className=\"actor-info__description-tagline\">Born in:</span>{\" \"}\r\n            <span>{place_of_birth}</span>\r\n          </p>\r\n        )}\r\n        <p className=\"actor-info__biography\">{biography}</p>\r\n        {homepage && (\r\n          <a href={homepage} className=\"actor-info__link\">\r\n            Visit actor's homepage\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nActorInfo.propTypes = {\r\n  biography: PropTypes.string,\r\n  profile_path: PropTypes.string,\r\n  birthday: PropTypes.string,\r\n  deathday: PropTypes.string,\r\n  place_of_birth: PropTypes.string,\r\n  homepage: PropTypes.string,\r\n};\r\n\r\nexport default ActorInfo;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport MovieCard from \"../../../components/movie-card/MovieCard\";\r\n\r\nimport \"./knownFor.scss\";\r\n\r\nconst KnownFor = (props) => {\r\n  const { actorData } = props;\r\n\r\n  const getKnownFor = () => {\r\n    if (actorData.response !== null) {\r\n      return actorData.response.results[0].known_for;\r\n    }\r\n  };\r\n  const knownForArr = getKnownFor();\r\n  return (\r\n    <div className=\"known-for\">\r\n      {knownForArr &&\r\n        knownForArr.length > 0 &&\r\n        knownForArr.map(\r\n          (item) =>\r\n            item.media_type === \"movie\" && (\r\n              <MovieCard movie={item} key={item.id} />\r\n            )\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nKnownFor.propTypes = {\r\n  actorData: PropTypes.object,\r\n};\r\n\r\nexport default KnownFor;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useFetch } from \"../../utils/hooks/useFetch\";\r\n\r\nimport ActorInfo from \"../../features/actor/actor-info/ActorInfo\";\r\nimport KnownFor from \"../../features/actor/known-for/KnownFor\";\r\n\r\nimport \"./actor.scss\";\r\n\r\nconst Actor = (props) => {\r\n  const { actorData } = props;\r\n\r\n  const getID = () => {\r\n    if (actorData.response !== null) {\r\n      return actorData.response.results[0].id;\r\n    }\r\n  };\r\n\r\n  const fullUrl = `https://api.themoviedb.org/3/person/${getID()}?api_key=f1782698a1c04f301973e311a7876bdb&language=en-US`;\r\n\r\n  const fullActorData = useFetch(fullUrl, \"byactorid\");\r\n\r\n  const {\r\n    id,\r\n    name,\r\n    biography,\r\n    profile_path,\r\n    birthday,\r\n    deathday,\r\n    place_of_birth,\r\n    homepage,\r\n  } = fullActorData.response !== null ? fullActorData.response : \"\";\r\n\r\n  return (\r\n    <>\r\n      {fullActorData.response !== null && fullActorData.response !== undefined && (\r\n        <div key={id} className=\"actor\">\r\n          <h2 className=\"actor__name\">{name}</h2>\r\n\r\n          <ActorInfo\r\n            biography={biography}\r\n            profile_path={profile_path}\r\n            birthday={birthday}\r\n            deathday={deathday}\r\n            place_of_birth={place_of_birth}\r\n            homepage={homepage}\r\n          />\r\n\r\n          <h3 className=\"actor__title\">{name} is known for:</h3>\r\n          <KnownFor actorData={actorData} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nActor.propTypes = {\r\n  actorData: PropTypes.object,\r\n};\r\n\r\nexport default Actor;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useFetch } from \"../../utils/hooks/useFetch\";\r\n\r\nimport Actor from \"./Actor.jsx\";\r\n\r\nconst ActorDetails = () => {\r\n  const { actorName } = useParams();\r\n  const url = `https://api.themoviedb.org/3/search/person?query=${actorName}&api_key=f1782698a1c04f301973e311a7876bdb&language=en-US`;\r\n\r\n  const actorData = useFetch(url, actorName);\r\n\r\n  return <Actor actorData={actorData} />;\r\n};\r\n\r\nexport default ActorDetails;\r\n","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\"\n\nimport Header from './features/header/Header.jsx'\nimport Navigation from \"./features/navigation/Navigation.jsx\";\nimport Footer from './features/footer/Footer.jsx'\nimport Home from './pages/home/Home.jsx'\nimport MovieSearchResults from './pages/searchResults/MovieSearchResults.jsx';\nimport MovieDetails from './pages/details/MovieDetails.jsx'\nimport PopularAllTimes from './pages/popular/PopularAllTimes.jsx'\nimport PopularByGenres from './pages/popular/PopularByGenres.jsx'\nimport ActorDetails from './pages/actor/ActorDetails'\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header />\n      <Navigation />\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n\n        <Route exact path=\"/most_popular\">\n          <PopularAllTimes />\n        </Route>\n\n        <Route exact path=\"/:movieId\">\n          <MovieDetails />\n        </Route>\n\n        <Route exact path=\"/actor/:actorName\">\n          <ActorDetails />\n        </Route>\n\n        <Route exact path=\"/search_results/:query\">\n          <MovieSearchResults />\n        </Route>\n\n        <Route exact path=\"/popular_by_genre/:genreId/:genreName\" >\n          <PopularByGenres />\n        </Route>\n\n      </Switch>\n      <Footer />\n    </React.Fragment>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App';\n\nimport \"./styles/index.scss\";\n\nReactDOM.render(\n  <Router basename={`${process.env.PUBLIC_URL}/`} >\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}