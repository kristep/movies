{"version":3,"sources":["components/button/Button.jsx","utils/debounce.js","features/arrow-scroll-up/ArrowScrollUp.jsx","features/layout/content/Content.jsx","features/layout/header/Header.jsx","utils/hooks/useFetch.js","features/navigation/Genres.jsx","utils/hooks/useInput.js","features/search/SearchLine.jsx","utils/hooks/useOnClickOutside.js","features/dropdown/Dropdown.jsx","features/navigation/Navigation.jsx","utils/dates.js","features/layout/footer/Footer.jsx","utils/useWindowDimensions.js","components/movie-card/MovieCard.jsx","features/new-movies/NewMovies.jsx","pages/home/Home.jsx","pages/searchResults/MovieSearchResults.jsx","features/movie/image-section/ImageSection.jsx","features/movie/movie-description/MovieDescription.jsx","features/crew/CrewItem.jsx","features/crew/Crew.jsx","features/cast/CastItem.jsx","features/cast/Cast.jsx","features/movie/production-companies/ProductionCompanies.jsx","pages/details/Details.jsx","pages/details/MovieDetails.jsx","features/popular-movies/PopularMovies.jsx","pages/popular/PopularAllTimes.jsx","pages/popular/PopularByGenres.jsx","utils/object.js","features/actor/actor-info/ActorInfo.jsx","features/actor/known-for/KnownFor.jsx","pages/actor/Actor.jsx","pages/actor/ActorDetails.jsx","App.js","index.js"],"names":["Button","onClick","children","className","ariaExpanded","ariaLabel","aria-expanded","aria-label","debounce","func","timeout","wait","immediate","context","args","arguments","callNow","clearTimeout","setTimeout","apply","ArrowScrollUp","useState","visible","setVisible","toggleVisibility","window","pageYOffset","console","log","useEffect","addEventListener","removeEventListener","document","body","scrollTop","documentElement","Content","Header","to","useFetch","url","repeat","response","setResponse","isLoading","setIsLoading","error","setError","source","axios","CancelToken","a","get","cancelToken","token","data","isCancel","fetchData","cancel","Genres","genres","map","genre","key","id","name","useInput","initialValue","value","setValue","reset","bind","onChange","event","target","SearchLine","history","useHistory","onSubmit","preventDefault","push","role","htmlFor","type","placeholder","useOnClickOutside","ref","handler","listener","current","contains","Dropdown","text","open","setOpen","dropdownRef","useRef","onKeyDown","e","Navigation","getTodayDate","Date","toISOString","split","getWeekAgoDate","today2","final","setDate","getDate","getCurrentYear","getFullYear","Footer","getWindowDimensions","width","innerWidth","height","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","MovieCard","props","movie","title","vote_average","vote_count","poster_path","release_date","src","alt","NewMovies","currentPage","setCurrentPage","setData","resultsToRender","setResultsToRender","pageCount","total_pages","movies","fullWidth","length","results","slice","previousLabel","nextLabel","breakLabel","breakClassName","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selectedPage","selected","containerClassName","subContainerClassName","activeClassName","Home","newMoviesUrl","upcommingMoviesUrl","MovieSearchResults","query","useParams","total_results","ImageSection","runtime","original_language","backdrop_path","genresList","MovieDescription","tagline","overview","budget","revenue","homepage","formatCurrency","Intl","NumberFormat","style","currency","format","href","CrewItem","titleText","Crew","crew","countries","director","setDirector","writers","setWriters","sound","setSound","forEach","obj","department","prev","item","job","country","iso_3166_1","CastItem","actor","profile_path","character","Cast","cast","Swiper","slidesPerView","spaceBetween","navigation","nextEl","prevEl","breakpoints","1024","768","640","320","cast_id","ProductionCompanies","production_companies","company","logo_path","Details","details","production_countries","people","substring","MovieDetails","movieId","PopularMovies","PopularAllTimes","PopularByGenres","genreId","genreName","isObjectEmpty","objectData","Object","keys","constructor","ActorInfo","biography","birthday","deathday","place_of_birth","KnownFor","actorData","knownForArr","known_for","getKnownFor","media_type","Actor","fullUrl","getID","ActorDetails","actorName","resulsts","App","Fragment","exact","path","ReactDOM","render","basename","process","getElementById"],"mappings":"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","file":"static/js/main.d83154a3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./button.scss\";\r\n\r\nconst Button = ({ onClick, children, className, ariaExpanded, ariaLabel }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={`button button--${className}`}\r\n      aria-expanded={ariaExpanded}\r\n      aria-label={ariaLabel}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  children: PropTypes.element,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  ariaExpanded: PropTypes.string,\r\n  ariaLabel: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","export const debounce = (func, wait = 16, immediate = true) => {\r\n  let timeout;\r\n  return () => {\r\n    const context = this,\r\n      args = arguments;\r\n    const later = function () {\r\n      timeout = null;\r\n      if (!immediate) func.apply(context, args);\r\n    };\r\n    const callNow = immediate && !timeout;\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(later, wait);\r\n    if (callNow) func.apply(context, args);\r\n  };\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"../../components/button/Button\";\r\n\r\nimport { debounce } from \"../../utils/debounce\";\r\n\r\nconst ArrowScrollUp = () => {\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const scrollUp = () => {\r\n    document.body.scrollTop = 0;\r\n    document.documentElement.scrollTop = 0;\r\n  };\r\n\r\n  const toggleVisibility = () => {\r\n    if (window.pageYOffset > 400) {\r\n      setVisible(true);\r\n      console.log(\"scrolling\");\r\n    } else {\r\n      setVisible(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", debounce(toggleVisibility));\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", toggleVisibility);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {visible ? (\r\n        <Button\r\n          ariaLabel={\"scroll to the top\"}\r\n          className={\"arrow-up\"}\r\n          onClick={scrollUp}\r\n        >\r\n          <i className=\"fas fa-arrow-up \"></i>\r\n        </Button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ArrowScrollUp;\r\n","import React from \"react\";\r\nimport ArrowScrollUp from \"../../arrow-scroll-up/ArrowScrollUp\";\r\n\r\nimport \"./content.scss\";\r\n\r\nconst Content = ({ children }) => {\r\n  return (\r\n    <main className=\"content\">\r\n      {children}\r\n      <ArrowScrollUp />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__overlay\">\r\n        <Link to=\"/\">\r\n          <span className=\"header__title\">Movies library</span>\r\n        </Link>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const useFetch = (url, repeat) => {\r\n  const [response, setResponse] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const CancelToken = axios.CancelToken;\r\n    const source = CancelToken.source();\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await axios.get(url, {\r\n          cancelToken: source.token,\r\n        });\r\n        setResponse(response.data);\r\n\r\n        setIsLoading(false);\r\n      } catch (error) {\r\n        if (axios.isCancel(error)) {\r\n          return;\r\n        } else {\r\n          setIsLoading(false);\r\n          setError(error);\r\n        }\r\n      }\r\n    };\r\n    fetchData();\r\n\r\n    return () => {\r\n      source.cancel();\r\n    };\r\n  }, [url, repeat]);\r\n\r\n  return { response, error, isLoading };\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useFetch } from \"../../utils/hooks/useFetch\";\r\n\r\nimport \"./genres.scss\";\r\n\r\nconst Genres = () => {\r\n  const { response } = useFetch(\r\n    \"https://api.themoviedb.org/3/genre/movie/list?api_key=f1782698a1c04f301973e311a7876bdb&language=en-US\",\r\n    \"genres\"\r\n  );\r\n\r\n  return (\r\n    <ul className=\"genres-list\">\r\n      {response?.genres\r\n        ? response.genres.map((genre) => (\r\n            <li key={genre.id} className=\"genres-list__genre\">\r\n              <Link\r\n                to={`/popular_by_genre/${genre.id}/${genre.name}`}\r\n                className=\"genres-list__link\"\r\n              >\r\n                {genre.name}\r\n              </Link>\r\n            </li>\r\n          ))\r\n        : null}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Genres;\r\n","import { useState } from \"react\";\r\n\r\nexport const useInput = initialValue => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    reset: () => setValue(\"\"),\r\n    bind: {\r\n      value,\r\n      onChange: event => {\r\n        setValue(event.target.value);\r\n      }\r\n    }\r\n  };\r\n};","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useInput } from \"../../utils/hooks/useInput\";\r\n\r\nimport \"./searchLine.scss\";\r\n\r\nconst SearchLine = () => {\r\n  const { value, bind, reset } = useInput(\"\");\r\n  let history = useHistory();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    reset();\r\n    if (value) {\r\n      history.push(`/search_results/${value}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"search\" role=\"search\">\r\n      <label htmlFor=\"search\">\r\n        <span className=\"visually-hidden\">Search</span>\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"search by movie title\"\r\n        {...bind}\r\n        className=\"search__input\"\r\n        id=\"search\"\r\n      />\r\n      <button type=\"submit\" className=\"search__button\">\r\n        <span className=\"visually-hidden\">Submit Search</span>\r\n        <i className=\"fas fa-search\"></i>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchLine;\r\n","import { useEffect } from \"react\";\n\nexport function useOnClickOutside(ref, handler) {\n  useEffect(() => {\n    const listener = (event) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n\n    document.addEventListener(\"mousedown\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n    };\n    // eslint-disable-next-line\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n}\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useOnClickOutside } from \"../../utils/hooks/useOnClickOutside\";\r\nimport Button from \"../../components/button/Button\";\r\n\r\nimport \"./dropdown.scss\";\r\n\r\nconst Dropdown = ({ text, children }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const onKeyDown = (e) => {\r\n      if (e.key === \"Escape\") {\r\n        setOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"keydown\", onKeyDown, false);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", onKeyDown, false);\r\n    };\r\n  }, [setOpen]);\r\n\r\n  useOnClickOutside(dropdownRef, () => setOpen(false));\r\n\r\n  return (\r\n    <div ref={dropdownRef}>\r\n      <Button\r\n        className={\"navigation\"}\r\n        onClick={() => {\r\n          setOpen(!open);\r\n        }}\r\n        ariaExpanded={open === true ? \"true\" : \"false\"}\r\n      >\r\n        <span>{text}</span>\r\n      </Button>\r\n      <div className={`dropdown ${open && \"is-active\"}`}>\r\n        <ul className=\"dropdown__content\" onClick={() => setOpen(false)}>\r\n          {children}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDropdown.propTypes = {\r\n  text: PropTypes.string,\r\n  children: PropTypes.element,\r\n};\r\n\r\nexport default Dropdown;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Genres from \"./Genres.jsx\";\r\nimport SearchLine from \"../search/SearchLine.jsx\";\r\n\r\nimport Dropdown from \"../dropdown/Dropdown\";\r\nimport \"./navigation.scss\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav className=\"navigation\">\r\n      <ul className=\"navigation__list\">\r\n        <li className=\"navigation__list-item\">\r\n          <Dropdown text={\"Popular by Genres\"}>\r\n            <Genres />\r\n          </Dropdown>\r\n        </li>\r\n        <li className=\"navigation__list-item\">\r\n          <Link to=\"/most_popular\" className=\"navigation__link\">\r\n            The most popular\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n\r\n      <SearchLine />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","export const getTodayDate = () => new Date().toISOString().split(\"T\")[0];\r\n\r\nexport const getWeekAgoDate = () => {\r\n  const today2 = new Date();\r\n  const final = new Date(today2);\r\n  final.setDate(today2.getDate() - 7);\r\n  const weekAgoDate = final.toISOString().split(\"T\")[0];\r\n  return weekAgoDate;\r\n};\r\n\r\nexport const getCurrentYear = () => {\r\n  const date = new Date();\r\n  return date.getFullYear();\r\n};","import { oneOfType } from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nimport { getCurrentYear } from \"../../../utils/dates\";\r\nimport \"./footer.scss\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <span className=\"footer__copyright\">\r\n        © {getCurrentYear()} KriStep All Rights Reserved\r\n      </span>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nexport function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./movieCard.scss\";\r\n\r\nconst MovieCard = (props) => {\r\n  const {\r\n    title,\r\n    id,\r\n    vote_average,\r\n    vote_count,\r\n    poster_path,\r\n    release_date,\r\n  } = props.movie;\r\n  return (\r\n    <Link to={`/${id}`} className=\"movie-card\">\r\n      {poster_path ? (\r\n        <img\r\n          src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\r\n          alt=\"movie poster\"\r\n          className=\"movie-card__image\"\r\n        />\r\n      ) : (\r\n        <div className=\"movie-card__image\"></div>\r\n      )}\r\n\r\n      <div className=\"movie-card__description\">\r\n        <h3 className=\"movie-card__title\">{title}</h3>\r\n        {vote_average > 0 ? (\r\n          <p className=\"movie-card__votes\">\r\n            {vote_average} points ({vote_count} votes)\r\n          </p>\r\n        ) : (\r\n          <p className=\"movie-card__votes\">-- no votes yet --</p>\r\n        )}\r\n\r\n        <span className=\"movie-card__released\">\r\n          <span className=\"visually-hidden\">Release date:</span> {release_date}\r\n        </span>\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport { useWindowDimensions } from \"../../utils/useWindowDimensions\";\r\nimport { useFetch } from \"../../utils/hooks/useFetch\";\r\n\r\nimport Button from \"../../components/button/Button.jsx\";\r\nimport MovieCard from \"../../components/movie-card/MovieCard\";\r\n\r\nimport \"./newMovies.scss\";\r\nimport \"../../styles/pagination.scss\";\r\n\r\nconst NewMovies = (props) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n  const [resultsToRender, setResultsToRender] = useState(0);\r\n\r\n  const elemmPerPage = 20; //we get 20 per page from API\r\n  const pageCount = data.total_pages;\r\n  const { width } = useWindowDimensions();\r\n  const { url, text, fullWidth } = props;\r\n  const { response: movies } = useFetch(`${url}${currentPage}`, currentPage);\r\n\r\n  useEffect(() => {\r\n    setData(movies);\r\n  }, [currentPage, movies]);\r\n\r\n  useEffect(() => {\r\n    if (width < 1120 && width > 852) {\r\n      setResultsToRender(3);\r\n    } else if (width > 1400) {\r\n      setResultsToRender(5);\r\n    } else {\r\n      setResultsToRender(4);\r\n    }\r\n  }, [width]);\r\n\r\n  const handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    setCurrentPage(selectedPage + 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"new-movies\">\r\n        <h2 className=\"new-movies__title\">{text}</h2>\r\n        <div className=\"new-movies__items\">\r\n          {data.length !== 0 &&\r\n            data.results\r\n              .slice(0, resultsToRender)\r\n              .map((movie) => <MovieCard movie={movie} key={movie.id} />)}\r\n        </div>\r\n\r\n        {pageCount > 1 && resultsToRender === elemmPerPage && (\r\n          <ReactPaginate\r\n            previousLabel={\"prev\"}\r\n            nextLabel={\"next\"}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break\"}\r\n            pageCount={pageCount}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={5}\r\n            onPageChange={handlePageClick}\r\n            containerClassName={\"pagination\"}\r\n            subContainerClassName={\"pages pagination\"}\r\n            activeClassName={\"active\"}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      {resultsToRender != elemmPerPage && (\r\n        <Button\r\n          onClick={() => setResultsToRender(elemmPerPage)}\r\n          className={\"show-all\"}\r\n        >\r\n          <span>show all</span>\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nNewMovies.propTypes = {\r\n  url: PropTypes.string,\r\n  text: PropTypes.string,\r\n  fullWidth: PropTypes.bool,\r\n};\r\n\r\nexport default NewMovies;\r\n","import React from \"react\";\r\n\r\nimport { getTodayDate, getWeekAgoDate } from \"../../utils/dates\";\r\nimport NewMovies from \"../../features/new-movies/NewMovies\";\r\n\r\nimport \"./home.scss\";\r\n\r\nconst Home = () => {\r\n  const newMoviesUrl = `https://api.themoviedb.org/3/discover/movie?api_key=f1782698a1c04f301973e311a7876bdb&primary_release_date.gte=${getWeekAgoDate()}&primary_release_date.lte=${getTodayDate()}&sort_by=release_date.desc&page=`;\r\n\r\n  const upcommingMoviesUrl = `https://api.themoviedb.org/3/movie/upcoming?api_key=f1782698a1c04f301973e311a7876bdb&primary_release_date.gte=${getTodayDate()}&page=`;\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <article>\r\n        <NewMovies url={newMoviesUrl} text={\"Just released movies:\"} />\r\n      </article>\r\n\r\n      <article className=\"home__section home__section--with-background\">\r\n        <NewMovies\r\n          url={upcommingMoviesUrl}\r\n          text={\"Upcomming movies:\"}\r\n          fullWidth={true}\r\n        />\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useFetch } from \"../../utils/hooks/useFetch\";\r\n\r\nimport MovieCard from \"../../components/movie-card/MovieCard\";\r\n\r\nimport \"./movieSearchResults.scss\";\r\nimport \"../../styles/pagination.scss\";\r\n\r\nconst MovieSearchResults = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n\r\n  const { query } = useParams();\r\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=f1782698a1c04f301973e311a7876bdb&query=${query}&page=${currentPage}`;\r\n\r\n  const { response: movies, isLoading } = useFetch(url, query);\r\n\r\n  useEffect(() => {\r\n    setData(movies);\r\n  }, [currentPage, movies]);\r\n\r\n  const pageCount = data.total_pages;\r\n\r\n  const handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    setCurrentPage(selectedPage + 1);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-results\">\r\n      {isLoading && <div className=\"loader\"></div>}\r\n      <h2 className=\"search-results__title\">Search by: '{query}'</h2>\r\n      {data.length !== 0 ? (\r\n        <span className=\"search-results__subtitle\">\r\n          {data.total_results} movies found\r\n        </span>\r\n      ) : (\r\n        \"No results found\"\r\n      )}\r\n\r\n      <div className=\"search-results__list\">\r\n        {data.length !== 0 &&\r\n          data.results.map((movie) => (\r\n            <MovieCard movie={movie} key={movie.id} />\r\n          ))}\r\n      </div>\r\n\r\n      {pageCount > 1 && (\r\n        <ReactPaginate\r\n          previousLabel={\"prev\"}\r\n          nextLabel={\"next\"}\r\n          breakLabel={\"...\"}\r\n          pageCount={pageCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={handlePageClick}\r\n          containerClassName={\"pagination\"}\r\n          subContainerClassName={\"pages pagination\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieSearchResults;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./imageSection.scss\";\r\n\r\nconst ImageSection = (props) => {\r\n  const {\r\n    genres,\r\n    release_date,\r\n    runtime,\r\n    original_language,\r\n    backdrop_path,\r\n  } = props;\r\n\r\n  const genresList = genres\r\n    ? genres.map((genre) => (\r\n        <li key={genre.id} className=\"image-section__genres-item\">\r\n          {genre.name}\r\n        </li>\r\n      ))\r\n    : \"\";\r\n\r\n  return (\r\n    <div className=\"image-section\">\r\n      <div className=\"image-section__info\">\r\n        <ul className=\"image-section__genres\">{genresList}</ul>\r\n        <span>release date: {release_date}</span>\r\n        <span>\r\n          {runtime > 0 ? runtime + \"min.\" : \"\"} ({original_language})\r\n        </span>\r\n      </div>\r\n\r\n      {backdrop_path ? (\r\n        <img\r\n          className=\"image-section__image\"\r\n          src={`https://image.tmdb.org/t/p/w500${backdrop_path}`}\r\n          alt=\"backdrop\"\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nImageSection.propTypes = {\r\n  genres: PropTypes.array,\r\n  release_date: PropTypes.string,\r\n  runtime: PropTypes.number,\r\n  original_language: PropTypes.string,\r\n  backdrop_path: PropTypes.string,\r\n};\r\n\r\nexport default ImageSection;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./movieDescription.scss\";\r\n\r\nconst MovieDescription = (props) => {\r\n  const { tagline, overview, budget, revenue, homepage } = props;\r\n  const formatCurrency = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n  });\r\n\r\n  return (\r\n    <div className=\"movie-description\">\r\n      <div>\r\n        <p className=\"movie-description__tagline\">{tagline}</p>\r\n        <p className=\"movie-description__overview\">{overview}</p>\r\n      </div>\r\n      <div>\r\n        {budget > 0 && (\r\n          <div className=\"movie-description__budget\">\r\n            <p className=\"movie-description__budget-row\">\r\n              <span>Budget:</span>\r\n              <span>{formatCurrency.format(budget)}</span>\r\n            </p>\r\n            <p className=\"movie-description__budget-row\">\r\n              <span>Revenue:</span>\r\n              <span>{formatCurrency.format(revenue)}</span>\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {homepage && (\r\n          <a\r\n            className=\"movie-description__link\"\r\n            href={`${homepage}`}\r\n            alt=\"homepage\"\r\n          >\r\n            Visit movie homepage\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieDescription.propTypes = {\r\n  tagline: PropTypes.string,\r\n  overview: PropTypes.string,\r\n  budget: PropTypes.number,\r\n  revenue: PropTypes.number,\r\n  homepage: PropTypes.string,\r\n};\r\n\r\nexport default MovieDescription;\r\n","import React from \"react\";\r\nimport PropTypes, { oneOfType } from \"prop-types\";\r\n\r\nimport \"./crewItem.scss\";\r\n\r\nconst CrewItem = ({ titleText, children }) => {\r\n  return (\r\n    <li className=\"crew-item\">\r\n      <h4 className=\"crew-item__title\">{titleText}</h4> {children}\r\n    </li>\r\n  );\r\n};\r\n\r\nCrewItem.propTypes = {\r\n  titleText: PropTypes.string,\r\n  children: oneOfType([PropTypes.object, PropTypes.string]),\r\n};\r\n\r\nexport default CrewItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport CrewItem from \"./CrewItem\";\r\nimport \"./crew.scss\";\r\n\r\nconst Crew = ({ crew, countries }) => {\r\n  const [director, setDirector] = useState(\"\");\r\n  const [writers, setWriters] = useState([]);\r\n  const [sound, setSound] = useState([]);\r\n\r\n  useEffect(() => {\r\n    crew.forEach((obj) => {\r\n      if (obj.department === \"Directing\") {\r\n        setDirector(obj.name);\r\n      } else if (obj.department === \"Writing\") {\r\n        setWriters((prev) => [...prev, obj]);\r\n      } else if (obj.department === \"Sound\") {\r\n        setSound((prev) => [...prev, obj]);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ul className=\"crew-list\">\r\n      {director && <CrewItem titleText={\"Directed by:\"}>{director}</CrewItem>}\r\n\r\n      {writers.length !== 0 && (\r\n        <CrewItem titleText={\"Written by:\"}>\r\n          <ul>\r\n            {writers.map((item) => (\r\n              <li key={item.id}>\r\n                {item.name} - {item.job}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </CrewItem>\r\n      )}\r\n\r\n      {sound.length !== 0 && (\r\n        <CrewItem titleText={\"Sound:\"}>\r\n          <ul>\r\n            {sound.map((item) => (\r\n              <li key={item.id}>\r\n                {item.name} - {item.job}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </CrewItem>\r\n      )}\r\n\r\n      {countries.length !== 0 && (\r\n        <CrewItem titleText={\"Production countries:\"}>\r\n          <ul>\r\n            {countries.map((country) => (\r\n              <li key={country.iso_3166_1}>\r\n                {country.iso_3166_1} - {country.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </CrewItem>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nCrew.propTypes = {\r\n  crew: PropTypes.array,\r\n  countries: PropTypes.array,\r\n};\r\n\r\nexport default Crew;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./castItem.scss\";\r\n\r\nconst CastItem = ({ actor }) => {\r\n  return (\r\n    <li className=\"cast-item\">\r\n      <div className=\"cast-item__image-wrapper\">\r\n        <img\r\n          className=\"cast-item__image\"\r\n          src={`https://image.tmdb.org/t/p/original${actor.profile_path}`}\r\n          alt=\"actor\"\r\n        />\r\n      </div>\r\n\r\n      {actor.character && (\r\n        <span className=\"cast-item__character\">{actor.character}</span>\r\n      )}\r\n      <span className=\"cast-item__name\">{actor.name}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nCastItem.propTypes = {\r\n  actor: PropTypes.shape({\r\n    profile_path: PropTypes.string,\r\n    characterh: PropTypes.string,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default CastItem;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Swiper from \"swiper\";\r\n\r\nimport CastItem from \"./CastItem\";\r\n\r\nimport \"./cast.scss\";\r\n\r\nconst Cast = ({ cast }) => {\r\n  useEffect(() => {\r\n    new Swiper(\".swiper-container\", {\r\n      slidesPerView: 10,\r\n      spaceBetween: 50,\r\n      navigation: {\r\n        nextEl: \".swiper-button-next\",\r\n        prevEl: \".swiper-button-prev\",\r\n      },\r\n      breakpoints: {\r\n        1024: {\r\n          slidesPerView: 6,\r\n          spaceBetween: 40,\r\n        },\r\n        768: {\r\n          slidesPerView: 4,\r\n          spaceBetween: 30,\r\n        },\r\n        640: {\r\n          slidesPerView: 3,\r\n          spaceBetween: 20,\r\n        },\r\n        320: {\r\n          slidesPerView: 2,\r\n          spaceBetween: 10,\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {cast.length !== 0 && (\r\n        <>\r\n          <h2 className=\"swiper-title\">The main cast:</h2>\r\n          <div className=\"swiper-container\">\r\n            <ul className=\" swiper-wrapper \">\r\n              {cast.map((actor) => (\r\n                <Link\r\n                  className=\"swiper-slide\"\r\n                  to={`/actor/${actor.name}`}\r\n                  key={actor.cast_id}\r\n                >\r\n                  <CastItem actor={actor} />\r\n                </Link>\r\n              ))}\r\n            </ul>\r\n\r\n            <div className=\"swiper-button-prev\"></div>\r\n            <div className=\"swiper-button-next\"></div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nCast.propTypes = {\r\n  cast: PropTypes.array,\r\n};\r\n\r\nexport default Cast;\r\n","import React from \"react\";\r\n\r\nimport \"./productionCompanies.scss\";\r\n\r\nconst ProductionCompanies = ({ production_companies }) => {\r\n  return (\r\n    <>\r\n      <h4 className=\"companies__title\">Production companies:</h4>\r\n      <ul className=\"companies__list\">\r\n        {production_companies.map((company) => (\r\n          <li key={company.id} className=\"companies__item\">\r\n            {company.logo_path ? (\r\n              <img\r\n                className=\"companies__logo\"\r\n                src={`https://image.tmdb.org/t/p/w200${company.logo_path}`}\r\n                alt=\"company logo\"\r\n              />\r\n            ) : (\r\n              <div className=\"companies__instead-logo\">\r\n                <p>{company.name}</p>\r\n              </div>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductionCompanies;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useFetch } from \"../../utils/hooks/useFetch\";\r\n\r\nimport ImageSection from \"../../features/movie/image-section/ImageSection\";\r\nimport MovieDescription from \"../../features/movie/movie-description/MovieDescription\";\r\nimport Crew from \"../../features/crew/Crew.jsx\";\r\nimport Cast from \"../../features/cast/Cast.jsx\";\r\nimport ProductionCompanies from \"../../features/movie/production-companies/ProductionCompanies\";\r\n\r\nimport \"swiper/css/swiper.css\";\r\nimport \"./details.scss\";\r\n\r\nconst Details = (props) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const {\r\n    title,\r\n    backdrop_path,\r\n    overview,\r\n    genres,\r\n    budget,\r\n    revenue,\r\n    release_date,\r\n    runtime,\r\n    homepage,\r\n    production_companies,\r\n    original_language,\r\n    tagline,\r\n    id,\r\n    production_countries,\r\n  } = props.details;\r\n\r\n  const { response: people } = useFetch(\r\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=f1782698a1c04f301973e311a7876bdb`,\r\n    \"people\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    setData(people);\r\n  }, [id, people]);\r\n\r\n  return (\r\n    <div className=\"details\">\r\n      <h2 className=\"details__title\">\r\n        {title}{\" \"}\r\n        <span className=\"details__year\">({release_date.substring(0, 4)})</span>\r\n      </h2>\r\n\r\n      <div className=\"details__image\">\r\n        <ImageSection\r\n          genres={genres}\r\n          release_date={release_date}\r\n          runtime={runtime}\r\n          original_language={original_language}\r\n          backdrop_path={backdrop_path}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"details__description\">\r\n        <MovieDescription\r\n          tagline={tagline}\r\n          overview={overview}\r\n          budget={budget}\r\n          revenue={revenue}\r\n          homepage={homepage}\r\n        />\r\n      </div>\r\n\r\n      {data.length !== 0 && (\r\n        <div className=\"details__cast\">\r\n          <Cast cast={data.cast} />\r\n        </div>\r\n      )}\r\n\r\n      {data.length !== 0 && (\r\n        <div className=\"details__crew\">\r\n          <Crew crew={data.crew} countries={production_countries} />\r\n        </div>\r\n      )}\r\n\r\n      {production_companies && (\r\n        <ul className=\"details__companies\">\r\n          <ProductionCompanies production_companies={production_companies} />\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nDetails.propTypes = {\r\n  title: PropTypes.string,\r\n  backdrop_path: PropTypes.string,\r\n  overview: PropTypes.string,\r\n  genres: PropTypes.array,\r\n  budget: PropTypes.string,\r\n  revenue: PropTypes.string,\r\n  release_date: PropTypes.string,\r\n  runtime: PropTypes.string,\r\n  homepage: PropTypes.string,\r\n  production_companies: PropTypes.array,\r\n  original_language: PropTypes.string,\r\n  tagline: PropTypes.string,\r\n  id: PropTypes.string,\r\n  production_countries: PropTypes.array,\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nexport default Details;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { useFetch } from \"../../utils/hooks/useFetch\";\r\n\r\nimport Details from \"./Details.jsx\";\r\n\r\nconst MovieDetails = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  const { movieId } = useParams();\r\n\r\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=f1782698a1c04f301973e311a7876bdb`;\r\n\r\n  const { response: movie } = useFetch(url, movieId);\r\n\r\n  useEffect(() => {\r\n    setData(movie);\r\n  }, [movie]);\r\n\r\n  return (\r\n    <>\r\n      {data.length !== 0 ? (\r\n        <Details details={data} />\r\n      ) : (\r\n        \"sorry, this movie has no details in our database\"\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactPaginate from \"react-paginate\";\r\n\r\nimport { useFetch } from \"../../utils/hooks/useFetch\";\r\n\r\nimport MovieCard from \"../../components/movie-card/MovieCard\";\r\n\r\nimport \"./popularMovies.scss\";\r\nimport \"../../styles/pagination.scss\";\r\n\r\nconst PopularMovies = (props) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [data, setData] = useState([]);\r\n\r\n  const { url, text } = props;\r\n\r\n  const { response } = useFetch(`${url}${currentPage}`, currentPage);\r\n\r\n  useEffect(() => {\r\n    setData(response);\r\n  }, [currentPage, response]);\r\n\r\n  const pageCount = data.total_pages;\r\n\r\n  const handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    setCurrentPage(selectedPage + 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"popular-movies\">\r\n        <h2 className=\"popular-movies__header\">{text}</h2>\r\n        <div className=\"popular-movies__items\">\r\n          {data.length !== 0 &&\r\n            data.results.map((movie) => (\r\n              <MovieCard movie={movie} key={movie.id} />\r\n            ))}\r\n        </div>\r\n\r\n        {pageCount > 1 && (\r\n          <ReactPaginate\r\n            previousLabel={\"prev\"}\r\n            nextLabel={\"next\"}\r\n            breakLabel={\"...\"}\r\n            breakClassName={\"break\"}\r\n            pageCount={pageCount}\r\n            marginPagesDisplayed={2}\r\n            pageRangeDisplayed={3}\r\n            onPageChange={handlePageClick}\r\n            containerClassName={\"pagination\"}\r\n            subContainerClassName={\"pages pagination\"}\r\n            activeClassName={\"active\"}\r\n          />\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nPopularMovies.propTypes = {\r\n  url: PropTypes.string,\r\n  text: PropTypes.string,\r\n};\r\n\r\nexport default PopularMovies;\r\n","import React from \"react\";\r\n\r\nimport PopularMovies from \"../../features/popular-movies/PopularMovies\";\r\n\r\nconst PopularAllTimes = () => {\r\n  const url =\r\n    \"https://api.themoviedb.org/3/discover/movie?api_key=f1782698a1c04f301973e311a7876bdb&sort_by=vote_average.desc&vote_count.gte=50&page=\";\r\n  return (\r\n    <main className=\"popular-movies\">\r\n      <PopularMovies url={url} text={\"The most popular movies of all times:\"} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default PopularAllTimes;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport PopularMovies from \"../../features/popular-movies/PopularMovies\";\r\n\r\nconst PopularByGenres = () => {\r\n  const { genreId, genreName } = useParams();\r\n\r\n  const url = `https://api.themoviedb.org/3/discover/movie?with_genres=${genreId}&api_key=f1782698a1c04f301973e311a7876bdb&sort_by=vote_average.desc&vote_count.gte=10&page=`;\r\n\r\n  return (\r\n    <main className=\"popular-movies\">\r\n      <PopularMovies url={url} text={`The most popular ${genreName} movies:`} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default PopularByGenres;\r\n","export const isObjectEmpty = (objectData) => {\r\n  if (\r\n    (Object.keys(objectData).length === 0 &&\r\n      objectData.constructor === Object) ||\r\n    objectData.length === 0\r\n  )\r\n    return true;\r\n\r\n  return false;\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./actorInfo.scss\";\r\n\r\nconst ActorInfo = (props) => {\r\n  const {\r\n    biography,\r\n    profile_path,\r\n    birthday,\r\n    deathday,\r\n    place_of_birth,\r\n    homepage,\r\n  } = props;\r\n  return (\r\n    <div className=\"actor-info\">\r\n      <img\r\n        src={`https://image.tmdb.org/t/p/original/${profile_path}`}\r\n        alt=\"actor\"\r\n        className=\"actor-info__image\"\r\n      />\r\n      <div className=\"actor-info__description\">\r\n        {birthday && (\r\n          <p>\r\n            <span className=\"actor-info__description-tagline\">\r\n              Birth date:{\" \"}\r\n            </span>\r\n            <span>{birthday}</span>\r\n          </p>\r\n        )}\r\n        {deathday !== null && (\r\n          <p>\r\n            <span className=\"actor-info__description-tagline\">Death date:</span>{\" \"}\r\n            <span>{deathday}</span>\r\n          </p>\r\n        )}\r\n        {place_of_birth && (\r\n          <p>\r\n            <span className=\"actor-info__description-tagline\">Born in:</span>{\" \"}\r\n            <span>{place_of_birth}</span>\r\n          </p>\r\n        )}\r\n        <p className=\"actor-info__biography\">{biography}</p>\r\n        {homepage && (\r\n          <a href={homepage} className=\"actor-info__link\">\r\n            Visit actor's homepage\r\n          </a>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nActorInfo.propTypes = {\r\n  biography: PropTypes.string,\r\n  profile_path: PropTypes.string,\r\n  birthday: PropTypes.string,\r\n  deathday: PropTypes.string,\r\n  place_of_birth: PropTypes.string,\r\n  homepage: PropTypes.string,\r\n};\r\n\r\nexport default ActorInfo;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport MovieCard from \"../../../components/movie-card/MovieCard\";\r\n\r\nimport \"./knownFor.scss\";\r\n\r\nconst KnownFor = (props) => {\r\n  const { actorData } = props;\r\n\r\n  const getKnownFor = () => {\r\n    if (actorData) {\r\n      return actorData[0].known_for;\r\n    }\r\n  };\r\n  const knownForArr = getKnownFor();\r\n  return (\r\n    <div className=\"known-for\">\r\n      {knownForArr &&\r\n        knownForArr.length > 0 &&\r\n        knownForArr.map(\r\n          (item) =>\r\n            item.media_type === \"movie\" && (\r\n              <MovieCard movie={item} key={item.id} />\r\n            )\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nKnownFor.propTypes = {\r\n  actorData: PropTypes.array,\r\n};\r\n\r\nexport default KnownFor;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useFetch } from \"../../utils/hooks/useFetch\";\r\n\r\nimport ActorInfo from \"../../features/actor/actor-info/ActorInfo\";\r\nimport KnownFor from \"../../features/actor/known-for/KnownFor\";\r\n\r\nimport \"./actor.scss\";\r\n\r\nconst Actor = (props) => {\r\n  const [data, setData] = useState({});\r\n\r\n  const { actorData } = props;\r\n\r\n  const getID = () => {\r\n    if (actorData) {\r\n      return actorData[0].id;\r\n    }\r\n  };\r\n\r\n  const fullUrl = `https://api.themoviedb.org/3/person/${getID()}?api_key=f1782698a1c04f301973e311a7876bdb&language=en-US`;\r\n\r\n  const { response: actor } = useFetch(fullUrl, \"byactorid\");\r\n\r\n  useEffect(() => {\r\n    setData(actor);\r\n  }, [actor]);\r\n\r\n  const {\r\n    id,\r\n    name,\r\n    biography,\r\n    profile_path,\r\n    birthday,\r\n    deathday,\r\n    place_of_birth,\r\n    homepage,\r\n  } = data;\r\n\r\n  return (\r\n    <div key={id} className=\"actor\">\r\n      <h2 className=\"actor__name\">{name}</h2>\r\n\r\n      <ActorInfo\r\n        biography={biography}\r\n        profile_path={profile_path}\r\n        birthday={birthday}\r\n        deathday={deathday}\r\n        place_of_birth={place_of_birth}\r\n        homepage={homepage}\r\n      />\r\n\r\n      <h3 className=\"actor__title\">{name} is known for:</h3>\r\n      <KnownFor actorData={actorData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nActor.propTypes = {\r\n  actorData: PropTypes.array,\r\n};\r\n\r\nexport default Actor;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { useFetch } from \"../../utils/hooks/useFetch\";\r\nimport { isObjectEmpty } from \"../../utils/object\";\r\n\r\nimport Actor from \"./Actor.jsx\";\r\n\r\nconst ActorDetails = () => {\r\n  const [data, setData] = useState({});\r\n\r\n  const { actorName } = useParams();\r\n\r\n  const url = `https://api.themoviedb.org/3/search/person?query=${actorName}&api_key=f1782698a1c04f301973e311a7876bdb&language=en-US`;\r\n\r\n  const { response: actor } = useFetch(url, actorName);\r\n\r\n  useEffect(() => {\r\n    setData(actor);\r\n  }, [actor]);\r\n\r\n  return (\r\n    <>\r\n      {!isObjectEmpty(data) && data.resulsts?.length !== 0 && (\r\n        <Actor actorData={data.results} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActorDetails;\r\n","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\"\n\nimport Content from \"./features/layout/content/Content\";\nimport Header from './features/layout/header/Header.jsx'\nimport Navigation from \"./features/navigation/Navigation.jsx\";\nimport Footer from './features/layout/footer/Footer.jsx'\nimport Home from './pages/home/Home.jsx'\nimport MovieSearchResults from './pages/searchResults/MovieSearchResults.jsx';\nimport MovieDetails from './pages/details/MovieDetails.jsx'\nimport PopularAllTimes from './pages/popular/PopularAllTimes.jsx'\nimport PopularByGenres from './pages/popular/PopularByGenres.jsx'\nimport ActorDetails from './pages/actor/ActorDetails'\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header />\n      <Navigation />\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Content>\n            <Home />\n          </Content>\n\n        </Route>\n\n        <Route exact path=\"/most_popular\">\n          <Content>\n            <PopularAllTimes />\n          </Content>\n        </Route>\n\n        <Route exact path=\"/:movieId\">\n          <Content>\n            <MovieDetails />\n          </Content>\n        </Route>\n\n        <Route exact path=\"/actor/:actorName\">\n          <Content>\n            <ActorDetails />\n          </Content>\n        </Route>\n\n        <Route exact path=\"/search_results/:query\">\n          <Content>\n            <MovieSearchResults />\n          </Content>\n\n        </Route>\n\n        <Route exact path=\"/popular_by_genre/:genreId/:genreName\" >\n          <Content>\n            <PopularByGenres />\n          </Content>\n        </Route>\n\n      </Switch>\n      <Footer />\n    </React.Fragment>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App';\n\nimport \"./styles/index.scss\";\n\nReactDOM.render(\n  <Router basename={`${process.env.PUBLIC_URL}/`} >\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}