{"version":3,"sources":["features/header/Header.jsx","utils/hooks/useFetch.js","features/navigation/Genres.jsx","utils/getters/GetGenres.js","features/search/SearchLine.jsx","utils/hooks/useInput.js","components/button/Button.jsx","features/dropdown/Dropdown.jsx","utils/hooks/useOnClickOutside.js","features/navigation/Navigation.jsx","features/footer/Footer.jsx","utils/dates.js","components/movie-card/MovieCard.jsx","pages/home/NewMovies.jsx","pages/home/Home.jsx","pages/searchResults/MovieSearchResults.js","features/search/MovieSearch.jsx","features/crew/CrewItem.jsx","features/crew/Crew.jsx","features/cast/CastItem.jsx","features/cast/Cast.jsx","features/movie/image-section/ImageSection.jsx","features/movie/movie-description/MovieDescription.jsx","features/movie/production-companies/ProductionCompanies.jsx","pages/details/MovieDetails.js","pages/details/GetMovieDetails.js","pages/popular/PopularAllTimes.js","pages/popular/PopularByGenres.js","pages/actor/Actor.js","pages/actor/GetActor.js","App.js","index.js"],"names":["Header","className","to","useFetch","url","query","useState","response","setResponse","isError","setIsError","isLoading","setIsLoading","useEffect","a","fetch","res","json","fetchData","Genres","genres","GetGenres","map","genre","key","id","name","SearchLine","initialValue","value","setValue","reset","bind","onChange","event","target","useInput","history","useHistory","onSubmit","preventDefault","push","role","htmlFor","type","placeholder","Button","onClick","text","Dropdown","ref","handler","children","open","setOpen","dropdownRef","useRef","onKeyDown","e","document","addEventListener","removeEventListener","listener","current","contains","Navigation","Footer","Date","getFullYear","body","scrollTop","documentElement","getTodayDate","toISOString","split","MovieCard","props","movie","title","vote_average","vote_count","poster_path","release_date","src","alt","NewMovies","data","setData","allPages","setAllPages","totalRes","setTotalRes","page","setPage","prevData","results","total_pages","total_results","style","textAlign","nowShowing","prevPage","loadMore","Home","newMoviesUrl","today2","final","setDate","getDate","getWeekAgoDate","upcommingMoviesUrl","showAll","previousSibling","classList","remove","display","MovieSearchResults","console","log","length","fontWeight","fontSize","MovieSearch","useParams","scrollUp","showNext","showPrev","CrewItem","titleText","Crew","crew","countries","director","setDirector","writers","setWriters","sound","setSound","forEach","obj","department","prev","item","job","country","iso_3166_1","CastItem","actor","profile_path","character","Cast","cast","Swiper","slidesPerView","spaceBetween","navigation","nextEl","prevEl","breakpoints","1024","768","640","320","cast_id","ImageSection","runtime","original_language","backdrop_path","genresList","MovieDescription","tagline","overview","budget","revenue","homepage","formatCurrency","Intl","NumberFormat","currency","format","href","ProductionCompanies","production_companies","company","logo_path","MovieDetails","details","production_countries","people","substring","GetMovieDetails","movieId","status_code","PopularAllTimes","PopularByGenres","genreId","genreName","Actor","actorData","knownForArr","known_for","getKnownFor","fullUrl","getID","fullActorData","biography","birthday","deathday","place_of_birth","media_type","Fragment","undefined","GetActor","actorName","App","exact","path","ReactDOM","render","basename","process","getElementById"],"mappings":"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","file":"static/js/main.869bd16b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <Link to=\"/\">\r\n        <div className=\"header__overlay\">\r\n          <span className=\"header__title\">Movies library</span>\r\n        </div>\r\n      </Link>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useState, useEffect } from 'react'\r\n\r\n\r\nexport const useFetch = (url, query) => {\r\n  const [response, setResponse] = useState(null);\r\n  const [isError, setIsError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsError(false);\r\n      setIsLoading(true);\r\n      try {\r\n        const res = await fetch(url);\r\n        const json = await res.json();\r\n        setResponse(json);\r\n      } catch (error) {\r\n        setIsError(true);\r\n      }\r\n      setIsLoading(false)\r\n    };\r\n\r\n    if (query) {\r\n      fetchData();\r\n    }\r\n  }, [url, query])\r\n\r\n  return { response, isLoading, isError };\r\n\r\n};\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { GetGenres } from \"../../utils/getters/GetGenres\";\r\n\r\nimport \"./genres.scss\";\r\n\r\nconst Genres = () => {\r\n  const genres = GetGenres();\r\n  return (\r\n    <ul className=\"genres-list\">\r\n      {genres !== \"\"\r\n        ? genres.genres.map((genre) => (\r\n            <li key={genre.id} className=\"genres-list__genre\">\r\n              <Link\r\n                to={`/popular_by_genre/${genre.id}/${genre.name}`}\r\n                className=\"genres-list__link\"\r\n              >\r\n                {genre.name}\r\n              </Link>\r\n            </li>\r\n          ))\r\n        : null}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Genres;\r\n","import { useFetch } from '../hooks/useFetch'\r\n\r\nexport const GetGenres = () => {\r\n  const data = useFetch('https://api.themoviedb.org/3/genre/movie/list?api_key=f1782698a1c04f301973e311a7876bdb&language=en-US', 'genres')\r\n\r\n  const genres = data.response;\r\n  return genres !== null ? genres : '';\r\n}\r\n\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useInput } from \"../../utils/hooks/useInput\";\r\n\r\nimport \"./searchLine.scss\";\r\n\r\nconst SearchLine = () => {\r\n  const { value, bind, reset } = useInput(\"\");\r\n  let history = useHistory();\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    reset();\r\n    if (value) {\r\n      history.push(`/search_results/${value}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"search\" role=\"search\">\r\n      <label htmlFor=\"search\">\r\n        <span className=\"visually-hidden\">Search</span>\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"search by movie title\"\r\n        {...bind}\r\n        className=\"search__input\"\r\n        id=\"search\"\r\n      />\r\n      <button type=\"submit\" className=\"search__button\">\r\n        <span className=\"visually-hidden\">Submit Search</span>\r\n        <i className=\"fas fa-search\"></i>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchLine;\r\n","import { useState } from \"react\";\r\n\r\nexport const useInput = initialValue => {\r\n  const [value, setValue] = useState(initialValue);\r\n\r\n  return {\r\n    value,\r\n    setValue,\r\n    reset: () => setValue(\"\"),\r\n    bind: {\r\n      value,\r\n      onChange: event => {\r\n        setValue(event.target.value);\r\n      }\r\n    }\r\n  };\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./button.scss\";\r\n\r\nconst Button = ({ onClick, text, className }) => {\r\n  return (\r\n    <button onClick={onClick} className={`button button--${className}`}>\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { useOnClickOutside } from \"../../utils/hooks/useOnClickOutside\";\r\nimport Button from \"../../components/button/Button\";\r\n\r\nimport \"./dropdown.scss\";\r\n\r\nconst Dropdown = ({ text, children }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const onKeyDown = (e) => {\r\n      if (e.key === \"Escape\") {\r\n        setOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"keydown\", onKeyDown, false);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", onKeyDown, false);\r\n    };\r\n  }, [setOpen]);\r\n\r\n  useOnClickOutside(dropdownRef, () => setOpen(false));\r\n\r\n  return (\r\n    <div ref={dropdownRef}>\r\n      <Button\r\n        text={text}\r\n        className={\"navigation\"}\r\n        onClick={() => {\r\n          setOpen(!open);\r\n        }}\r\n      />\r\n      <div className={`dropdown ${open && \"is-active\"}`}>\r\n        <ul className=\"dropdown__content\">{children}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDropdown.propTypes = {\r\n  text: PropTypes.string,\r\n  children: PropTypes.element,\r\n};\r\n\r\nexport default Dropdown;\r\n","import { useEffect } from \"react\";\n\nexport function useOnClickOutside(ref, handler) {\n  useEffect(() => {\n    const listener = (event) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(event.target)) {\n        return;\n      }\n      handler(event);\n    };\n\n    document.addEventListener(\"mousedown\", listener);\n    return () => {\n      document.removeEventListener(\"mousedown\", listener);\n    };\n    // eslint-disable-next-line\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n}\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Genres from \"./Genres.jsx\";\r\nimport SearchLine from \"../search/SearchLine.jsx\";\r\n\r\nimport Dropdown from \"../dropdown/Dropdown\";\r\nimport \"./navigation.scss\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <nav className=\"navigation\">\r\n      <ul className=\"navigation__list\">\r\n        <li className=\"navigation__list-item\">\r\n          <Dropdown text={\"Popular by Genres\"}>\r\n            <Genres />\r\n          </Dropdown>\r\n        </li>\r\n        <li className=\"navigation__list-item\">\r\n          <Link to=\"popular_all_times\" className=\"navigation__link\">\r\n            The most popular\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n\r\n      <SearchLine />\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport \"./footer.scss\";\r\n\r\nconst Footer = () => {\r\n  const scrollUp = () => {\r\n    document.body.scrollTop = 0;\r\n    document.documentElement.scrollTop = 0;\r\n  };\r\n\r\n  const getCurrentYear = () => {\r\n    const date = new Date();\r\n    return date.getFullYear();\r\n  };\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <span className=\"footer__copyright\">\r\n        © {getCurrentYear()} KriStep All Rights Reserved\r\n      </span>\r\n      <i className=\"fas fa-arrow-up footer__arrow-up\" onClick={scrollUp}></i>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const getTodayDate = () => new Date().toISOString().split(\"T\")[0];\r\n\r\nexport const getWeekAgoDate = () => {\r\n  const today2 = new Date();\r\n  const final = new Date(today2);\r\n  final.setDate(today2.getDate() - 7);\r\n  const weekAgoDate = final.toISOString().split(\"T\")[0];\r\n  return weekAgoDate;\r\n};","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./movieCard.scss\";\r\n\r\nconst MovieCard = (props) => {\r\n  const {\r\n    title,\r\n    id,\r\n    vote_average,\r\n    vote_count,\r\n    poster_path,\r\n    release_date,\r\n  } = props.movie;\r\n  return (\r\n    <>\r\n      <Link to={`/${id}`} className=\"movie-card\">\r\n        {poster_path ? (\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\r\n            alt=\"movie poster\"\r\n            className=\"movie-card__image\"\r\n          />\r\n        ) : (\r\n          <img className=\"movie-card__image\" alt=\"this movie has no poster\" />\r\n        )}\r\n\r\n        <div className=\"movie-card__description\">\r\n          <h3 className=\"movie-card__title\">{title}</h3>\r\n          {vote_average > 0 ? (\r\n            <p className=\"movie-card__votes\">\r\n              {vote_average} points ({vote_count} votes)\r\n            </p>\r\n          ) : (\r\n            <p className=\"movie-card__votes\">-- no votes yet --</p>\r\n          )}\r\n\r\n          <span className=\"movie-card__released\">{release_date}</span>\r\n        </div>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"../../components/button/Button.jsx\";\r\nimport MovieCard from \"../../components/movie-card/MovieCard\";\r\n\r\nimport \"./newMovies.scss\";\r\n\r\nconst NewMovies = (props) => {\r\n  const [data, setData] = useState([]);\r\n  const [allPages, setAllPages] = useState(0);\r\n  const [totalRes, setTotalRes] = useState(0);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n\r\n  const loadMore = (e) => {\r\n    if (page < allPages) {\r\n      e.preventDefault();\r\n      setPage((prevPage) => prevPage + 1);\r\n    }\r\n  };\r\n\r\n  const nowShowing = () => {\r\n    let current = page * 20;\r\n    if (current > totalRes) {\r\n      current = totalRes;\r\n    }\r\n    return current;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsError(false);\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await fetch(`${props.url}${page}`);\r\n        const res = await response.json();\r\n\r\n        setData((prevData) => [...prevData, ...res.results]);\r\n        setAllPages(res.total_pages);\r\n        setTotalRes(res.total_results);\r\n      } catch (error) {\r\n        setIsError(true);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    fetchData();\r\n  }, [page, props.url]);\r\n\r\n  return (\r\n    <>\r\n      {isError && <div>Something went wrong ...</div>}\r\n      {isLoading ? (\r\n        <h1>LOADING...</h1>\r\n      ) : (\r\n        <div className=\"new-movies\">\r\n          <h2 className=\"new-movies__header\">{props.text}</h2>\r\n          <div className=\"new-movies__items\">\r\n            {data.map((movie) => (\r\n              <MovieCard movie={movie} key={movie.id} />\r\n            ))}\r\n          </div>\r\n          <p className=\"new-movies__counts\" style={{ textAlign: \"center\" }}>\r\n            now showing: {nowShowing()} from {totalRes} results\r\n          </p>\r\n\r\n          {page < allPages ? (\r\n            <Button\r\n              onClick={(e) => loadMore(e)}\r\n              className={\"load-more\"}\r\n              text={\"Load More\"}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewMovies;\r\n","import React from \"react\";\r\n\r\nimport { getTodayDate, getWeekAgoDate } from \"../../utils/dates\";\r\nimport Button from \"../../components/button/Button.jsx\";\r\nimport NewMovies from \"./NewMovies\";\r\n\r\nimport \"../searchResults/results.css\";\r\nimport \"./home.scss\";\r\n\r\nconst Home = () => {\r\n  const newMoviesUrl = `https://api.themoviedb.org/3/discover/movie?api_key=f1782698a1c04f301973e311a7876bdb&primary_release_date.gte=${getWeekAgoDate()}&primary_release_date.lte=${getTodayDate()}&sort_by=release_date.desc&page=`;\r\n\r\n  const upcommingMoviesUrl = `https://api.themoviedb.org/3/movie/upcoming?api_key=f1782698a1c04f301973e311a7876bdb&primary_release_date.gte=${getTodayDate()}&page=`;\r\n\r\n  const showAll = (event) => {\r\n    event.target.previousSibling.classList.remove(\"new-movies_home\");\r\n    event.target.style.display = \"none\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"new-movies_container\">\r\n        <div className=\"new-movies-content new-movies_home\">\r\n          <NewMovies url={newMoviesUrl} text={\"Just released movies:\"} />\r\n        </div>\r\n        <Button\r\n          onClick={(event) => showAll(event)}\r\n          text={\"show all\"}\r\n          className={\"show-all\"}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"new-movies_container upcomming-container\">\r\n        <div className=\"new-movies_content new-movies_home\">\r\n          <NewMovies url={upcommingMoviesUrl} text={\"Upcomming movies:\"} />\r\n        </div>\r\n        <Button\r\n          onClick={(event) => showAll(event)}\r\n          text={\"show all\"}\r\n          className={\"show-all\"}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react'\r\nimport MovieCard from '../../components/movie-card/MovieCard'\r\n\r\nconst MovieSearchResults = (props) => {\r\n\r\n  const { page, total_results, total_pages, results } = props.results\r\n  const query = props.query\r\n  console.log(results)\r\n  return (\r\n    <div className=\"results-container\">\r\n\r\n      <h2\r\n        style={{ textAlign: 'center' }}>\r\n        Search by: '{query}' <br />\r\n        {results.length > 0 ?\r\n          <span\r\n            style={{ fontWeight: 'normal', fontSize: 'smaller' }}>{total_results} movies found</span> : ''}\r\n      </h2>\r\n\r\n      <div className=\"results-list\">\r\n        {\r\n          results.length > 0 ?\r\n            results.map(movie => (\r\n              <MovieCard movie={movie} key={movie.id} />\r\n            ))\r\n            : <p>nothing to display</p>\r\n        }\r\n      </div>\r\n\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default MovieSearchResults\r\n\r\n","import React, { useState } from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nimport { useFetch } from '../../utils/hooks/useFetch'\r\nimport MovieSearchResults from '../../pages/searchResults/MovieSearchResults'\r\n\r\nconst MovieSearch = () => {\r\n  const { query } = useParams()\r\n  const [page, setPage] = useState(1);\r\n\r\n  let url = `https://api.themoviedb.org/3/search/movie?api_key=f1782698a1c04f301973e311a7876bdb&query=${query}&page=${page}`\r\n\r\n  const { response } = useFetch(url, query)\r\n  const scrollUp = () => {\r\n    document.body.scrollTop = 0;\r\n    document.documentElement.scrollTop = 0;\r\n  }\r\n\r\n  const showPrev = () => {\r\n    if (page > 1) setPage(prevPage => prevPage - 1);\r\n    scrollUp()\r\n  }\r\n\r\n  const showNext = () => {\r\n    setPage(prevPage => prevPage + 1);\r\n    scrollUp()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {response !== null ?\r\n        <MovieSearchResults\r\n          results={response}\r\n          query={query}\r\n          showNext={showNext}\r\n          showPrev={showPrev}\r\n        /> : 'not found'}\r\n    </>\r\n  )\r\n}\r\nexport default MovieSearch\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./crewItem.scss\";\r\n\r\nconst CrewItem = ({ titleText, children }) => {\r\n  return (\r\n    <li className=\"crew-item\">\r\n      <h4 className=\"crew-item__title\">{titleText}</h4> {children}\r\n    </li>\r\n  );\r\n};\r\n\r\nCrewItem.propTypes = {\r\n  titleText: PropTypes.string,\r\n  children: PropTypes.element,\r\n};\r\n\r\nexport default CrewItem;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport CrewItem from \"./CrewItem\";\r\nimport \"./crew.scss\";\r\n\r\nconst Crew = ({ crew, countries }) => {\r\n  const [director, setDirector] = useState(\"\");\r\n  const [writers, setWriters] = useState([]);\r\n  const [sound, setSound] = useState([]);\r\n\r\n  useEffect(() => {\r\n    crew.forEach((obj) => {\r\n      if (obj.department === \"Directing\") {\r\n        setDirector(obj.name);\r\n      } else if (obj.department === \"Writing\") {\r\n        setWriters((prev) => [...prev, obj]);\r\n      } else if (obj.department === \"Sound\") {\r\n        setSound((prev) => [...prev, obj]);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ul className=\"crew-list\">\r\n      {director && <CrewItem titleText={\"Directed by:\"}>{director}</CrewItem>}\r\n\r\n      {writers.length !== 0 && (\r\n        <CrewItem titleText={\"Written by:\"}>\r\n          <ul>\r\n            {writers.map((item) => (\r\n              <li key={item.id}>\r\n                {item.name} - {item.job}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </CrewItem>\r\n      )}\r\n\r\n      {sound.length !== 0 && (\r\n        <CrewItem titleText={\"Sound:\"}>\r\n          <ul>\r\n            {sound.map((item) => (\r\n              <li key={item.id}>\r\n                {item.name} - {item.job}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </CrewItem>\r\n      )}\r\n\r\n      {countries.length !== 0 && (\r\n        <CrewItem titleText={\"Production countries:\"}>\r\n          <ul>\r\n            {countries.map((country) => (\r\n              <li key={country.iso_3166_1}>\r\n                {country.iso_3166_1} - {country.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </CrewItem>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nCrew.propTypes = {\r\n  crew: PropTypes.array,\r\n  countries: PropTypes.array,\r\n};\r\n\r\nexport default Crew;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./castItem.scss\";\r\n\r\nconst CastItem = ({ actor }) => {\r\n  return (\r\n    <li className=\"cast-item\">\r\n      <div className=\"cast-item__image-wrapper\">\r\n        <img\r\n          className=\"cast-item__image\"\r\n          src={`https://image.tmdb.org/t/p/original${actor.profile_path}`}\r\n          alt=\"actor\"\r\n        />\r\n      </div>\r\n\r\n      {actor.character && (\r\n        <span className=\"cast-item__character\">{actor.character}</span>\r\n      )}\r\n      <span className=\"cast-item__name\">{actor.name}</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nCastItem.propTypes = {\r\n  actor: PropTypes.shape({\r\n    profile_path: PropTypes.string,\r\n    characterh: PropTypes.string,\r\n    name: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport default CastItem;\r\n","import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Swiper from \"swiper\";\r\n\r\nimport CastItem from \"./CastItem\";\r\n\r\nimport \"./cast.scss\";\r\n\r\nconst Cast = ({ cast }) => {\r\n  useEffect(() => {\r\n    new Swiper(\".swiper-container\", {\r\n      slidesPerView: 10,\r\n      spaceBetween: 50,\r\n      navigation: {\r\n        nextEl: \".swiper-button-next\",\r\n        prevEl: \".swiper-button-prev\",\r\n      },\r\n      breakpoints: {\r\n        1024: {\r\n          slidesPerView: 6,\r\n          spaceBetween: 40,\r\n        },\r\n        768: {\r\n          slidesPerView: 4,\r\n          spaceBetween: 30,\r\n        },\r\n        640: {\r\n          slidesPerView: 3,\r\n          spaceBetween: 20,\r\n        },\r\n        320: {\r\n          slidesPerView: 2,\r\n          spaceBetween: 10,\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {cast.length !== 0 && (\r\n        <div className=\"swiper-container\">\r\n          <ul className=\" swiper-wrapper \">\r\n            {cast.map((actor) => (\r\n              <Link\r\n                className=\"swiper-slide\"\r\n                to={`/actor/${actor.name}`}\r\n                key={actor.cast_id}\r\n              >\r\n                <CastItem actor={actor} />\r\n              </Link>\r\n            ))}\r\n          </ul>\r\n          <div className=\"swiper-button-prev\"></div>\r\n          <div className=\"swiper-button-next\"></div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nCast.propTypes = {\r\n  cast: PropTypes.array,\r\n};\r\n\r\nexport default Cast;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./imageSection.scss\";\r\n\r\nconst ImageSection = (props) => {\r\n  const {\r\n    genres,\r\n    release_date,\r\n    runtime,\r\n    original_language,\r\n    backdrop_path,\r\n  } = props;\r\n\r\n  const genresList = genres\r\n    ? genres.map((genre) => (\r\n        <li key={genre.id} className=\"image-section__genres-item\">\r\n          {genre.name}\r\n        </li>\r\n      ))\r\n    : \"\";\r\n\r\n  return (\r\n    <div className=\"image-section\">\r\n      <div className=\"image-section__info\">\r\n        <ul className=\"image-section__genres\">{genresList}</ul>\r\n        <span>release date: {release_date}</span>\r\n        <span>\r\n          {runtime > 0 ? runtime + \"min.\" : \"\"} ({original_language})\r\n        </span>\r\n      </div>\r\n\r\n      {backdrop_path ? (\r\n        <img\r\n          className=\"image-section__image\"\r\n          src={`https://image.tmdb.org/t/p/w500${backdrop_path}`}\r\n          alt=\"backdrop\"\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nImageSection.propTypes = {\r\n  genres: PropTypes.array,\r\n  release_date: PropTypes.string,\r\n  runtime: PropTypes.string,\r\n  original_language: PropTypes.string,\r\n  backdrop_path: PropTypes.string,\r\n};\r\n\r\nexport default ImageSection;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./movieDescription.scss\";\r\n\r\nconst MovieDescription = (props) => {\r\n  const { tagline, overview, budget, revenue, homepage } = props;\r\n  const formatCurrency = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n  });\r\n  console.log(budget);\r\n  return (\r\n    <div className=\"movie-description\">\r\n      <p className=\"movie-description__tagline\">{tagline}</p>\r\n      <p>{overview}</p>\r\n\r\n      {budget > 0 && (\r\n        <div className=\"movie-description__budget\">\r\n          <p className=\"movie-description__budget-row\">\r\n            <span>Budget:</span>\r\n            <span>{formatCurrency.format(budget)}</span>\r\n          </p>\r\n          <p className=\"movie-description__budget-row\">\r\n            <span>Revenue:</span>\r\n            <span>{formatCurrency.format(revenue)}</span>\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {homepage && (\r\n        <a\r\n          className=\"movie-description__link\"\r\n          href={`${homepage}`}\r\n          alt=\"homepage\"\r\n        >\r\n          Visit movie homepage\r\n        </a>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDescription;\r\n","import React from \"react\";\r\n\r\nimport \"./productionCompanies.scss\";\r\n\r\nconst ProductionCompanies = ({ production_companies }) => {\r\n  return (\r\n    <ul className=\"companies\">\r\n      Production companies:\r\n      {production_companies.map((company) => (\r\n        <li key={company.id} className=\"companies-item\">\r\n          {company.logo_path ? (\r\n            <img\r\n              className=\"companies__logo\"\r\n              src={`https://image.tmdb.org/t/p/w200${company.logo_path}`}\r\n              alt=\"company logo\"\r\n            />\r\n          ) : (\r\n            <div className=\"companies__instead-logo\">\r\n              <p>{company.name}</p>\r\n            </div>\r\n          )}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ProductionCompanies;\r\n","import React from 'react'\r\nimport { useFetch } from '../../utils/hooks/useFetch'\r\n\r\nimport Crew from '../../features/crew/Crew.jsx'\r\nimport Cast from '../../features/cast/Cast.jsx'\r\n\r\nimport 'swiper/css/swiper.css'\r\nimport './details.css'\r\nimport ImageSection from '../../features/movie/image-section/ImageSection'\r\nimport MovieDescription from '../../features/movie/movie-description/MovieDescription'\r\nimport ProductionCompanies from '../../features/movie/production-companies/ProductionCompanies'\r\n\r\nconst MovieDetails = (props) => {\r\n  const { title, backdrop_path, overview, genres, budget, revenue, release_date, runtime, homepage, production_companies, original_language, tagline, id, production_countries } = props.details\r\n\r\n  const data = useFetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=f1782698a1c04f301973e311a7876bdb`, 'people')\r\n\r\n  const people = data.response\r\n  console.log(budget)\r\n  return (\r\n    <div className=\"details-wrapper\">\r\n      <h2 className=\"details-title\">{title} <span className=\"details-year\">({release_date.substring(0, 4)})</span></h2>\r\n\r\n      <div className=\"details-pic-container\">\r\n        <ImageSection genres={genres}\r\n          release_date={release_date}\r\n          runtime={runtime}\r\n          original_language={original_language}\r\n          backdrop_path={backdrop_path} />\r\n      </div>\r\n\r\n      <div className=\"details-description-container\">\r\n        <MovieDescription tagline={tagline} overview={overview} budget={budget} revenue={revenue} homepage={homepage} />\r\n      </div>\r\n\r\n      {people !== null &&\r\n        <div className=\"cast-container\">\r\n          <Cast cast={people.cast} />\r\n        </div>\r\n      }\r\n      {people !== null &&\r\n        <div className=\"crew-container\">\r\n          <Crew crew={people.crew} countries={production_countries} />\r\n        </div>\r\n      }\r\n\r\n      {production_companies &&\r\n        <ProductionCompanies production_companies={production_companies} />}\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default MovieDetails","import React from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\nimport { useFetch } from '../../utils/hooks/useFetch'\r\nimport MovieDetails from './MovieDetails'\r\n\r\nconst GetMovieDetails = () => {\r\n  const { movieId } = useParams()\r\n\r\n  const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=f1782698a1c04f301973e311a7876bdb`\r\n\r\n  const response = useFetch(url, movieId)\r\n  console.log(response)\r\n  return (\r\n    <>\r\n      {response.response !== null && response.response.status_code !== 34 ?\r\n        <MovieDetails\r\n          details={response.response}\r\n        />\r\n        : 'sorry, this movie has no details in our database'\r\n      }\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nexport default GetMovieDetails","import React from 'react'\r\nimport NewMovies from '../home/NewMovies'\r\n\r\nconst PopularAllTimes = () => {\r\n\r\n  const url = 'https://api.themoviedb.org/3/discover/movie?api_key=f1782698a1c04f301973e311a7876bdb&sort_by=vote_average.desc&vote_count.gte=50&page='\r\n  return (\r\n    <div className=\"new-movies_container \">\r\n      <div className=\"new-movies-content\">\r\n        <NewMovies\r\n          url={url}\r\n          text={'The most popular movies of all times:'}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default PopularAllTimes","import React from 'react'\r\nimport { useParams } from \"react-router-dom\"\r\n\r\nimport NewMovies from '../home/NewMovies'\r\n\r\nconst PopularByGenres = () => {\r\n  const { genreId, genreName } = useParams()\r\n\r\n  const url = `https://api.themoviedb.org/3/discover/movie?with_genres=${genreId}&api_key=f1782698a1c04f301973e311a7876bdb&sort_by=vote_average.desc&vote_count.gte=10&page=`\r\n  return (\r\n    <div className=\"new-movies_container \">\r\n      <div className=\"new-movies-content \">\r\n        <NewMovies\r\n          url={url}\r\n          text={`The most popular ${genreName} movies:`}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default PopularByGenres","import React from 'react'\r\nimport './actor.css'\r\nimport { useFetch } from '../../utils/hooks/useFetch'\r\nimport MovieCard from '../../components/movie-card/MovieCard'\r\n\r\nconst Actor = (props) => {\r\n  const actorData = props.actorData\r\n\r\n\r\n  const getID = () => {\r\n    if (actorData.response !== null) {\r\n      return actorData.response.results[0].id\r\n    }\r\n  }\r\n\r\n  const getKnownFor = () => {\r\n    if (actorData.response !== null) {\r\n      return actorData.response.results[0].known_for\r\n    }\r\n  }\r\n  const knownForArr = getKnownFor()\r\n\r\n\r\n  const fullUrl = `https://api.themoviedb.org/3/person/${getID()}?api_key=f1782698a1c04f301973e311a7876bdb&language=en-US`\r\n\r\n  const fullActorData = useFetch(fullUrl, 'byactorid')\r\n\r\n\r\n  const { id, name, biography, profile_path, birthday, deathday, place_of_birth, homepage, media_type } = fullActorData.response !== null ? fullActorData.response : ''\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {fullActorData.response !== null && fullActorData.response !== undefined ?\r\n\r\n        <div key={id} className=\"actor_wrapper\" >\r\n          <h2>{name}</h2>\r\n          <div className=\"actor_container\">\r\n            <div>\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/original/${profile_path}`}\r\n                alt=\"actor\"\r\n                className=\"actor_img\"\r\n              />\r\n              <p>Birth date: {birthday} {deathday !== null ? `Death date: ${deathday}` : ''}</p>\r\n              <p>Born in {place_of_birth ? place_of_birth : ''}</p>\r\n            </div>\r\n\r\n            <p>{biography}</p>\r\n          </div>\r\n\r\n\r\n          <h2>{name} is known for:</h2>\r\n          <div className=\"known_for\">\r\n            {\r\n              knownForArr !== undefined && knownForArr.length > 0 ?\r\n                knownForArr.map(item => item.media_type === 'movie' ? (<div className=\"results-list\" key={item.id}>\r\n                  <MovieCard movie={item} key={item.id} />\r\n                </div>) : '')\r\n                : ''\r\n            }\r\n          </div>\r\n\r\n\r\n\r\n\r\n          {homepage ? <a href={homepage}>Visit actor's homepage</a> : ''}\r\n\r\n        </div>\r\n\r\n\r\n        : ''\r\n\r\n      }\r\n    </React.Fragment>\r\n\r\n  )\r\n}\r\n\r\nexport default Actor","import React from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useFetch } from '../../utils/hooks/useFetch'\r\nimport Actor from './Actor'\r\n\r\nconst GetActor = () => {\r\n  const { actorName } = useParams()\r\n  const url = `https://api.themoviedb.org/3/search/person?query=${actorName}&api_key=f1782698a1c04f301973e311a7876bdb&language=en-US`\r\n\r\n  const actorData = useFetch(url, actorName)\r\n\r\n  return (\r\n    <Actor actorData={actorData} />\r\n  )\r\n}\r\n\r\nexport default GetActor\r\n\r\n","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\"\n\nimport Header from './features/header/Header.jsx'\nimport Navigation from \"./features/navigation/Navigation.jsx\";\nimport Footer from './features/footer/Footer.jsx'\nimport Home from './pages/home/Home.jsx'\nimport MovieSearch from '../src/features/search/MovieSearch.jsx'\nimport GetMovieDetails from './pages/details/GetMovieDetails'\nimport PopularAllTimes from './pages/popular/PopularAllTimes'\nimport PopularByGenres from './pages/popular/PopularByGenres'\nimport GetActor from './pages/actor/GetActor'\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header />\n      <Navigation />\n\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n\n        <Route exact path=\"/popular_all_times\">\n          <PopularAllTimes />\n        </Route>\n\n        <Route exact path=\"/:movieId\">\n          <GetMovieDetails />\n        </Route>\n\n        <Route exact path=\"/actor/:actorName\">\n          <GetActor />\n        </Route>\n\n        <Route exact path=\"/search_results/:query\">\n          <MovieSearch />\n        </Route>\n\n        <Route exact path=\"/popular_by_genre/:genreId/:genreName\" >\n          <PopularByGenres />\n        </Route>\n\n      </Switch>\n      <Footer />\n    </React.Fragment>\n  )\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App';\n\nimport \"./styles/index.scss\";\n\nReactDOM.render(\n  <Router basename={`${process.env.PUBLIC_URL}/`} >\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}